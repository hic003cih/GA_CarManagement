<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FOX.COMMON</name>
    </assembly>
    <members>
        <member name="T:FOX.COMMON.Rmb">
            <summary> 
            Rmb 的摘要说明。 
            </summary> 
        </member>
        <member name="M:FOX.COMMON.Rmb.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:FOX.COMMON.Rmb.CmycurD(System.String)">
            
            <summary> 
            一个重载，将字符串先转换成数字在调用CmycurD(decimal num) 
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="T:FOX.COMMON.ResourceManager">
            <summary>
            ResourceManager
            资源管理器
            
            修改纪录
            	2007.05.16 版本：1.0 JiRiGaLa	重新调整代码的规范化。
            
            版本：1.0
            
            <author>
            	<name>JiRiGaLa</name>
            	<date>2007.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="M:FOX.COMMON.TimeParser.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.TimeParser.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="T:FOX.COMMON.RetrCommand">
            <summary>
            This class represents the Pop3 RETR command.
            </summary>
        </member>
        <member name="T:FOX.COMMON.Pop3Command`1">
            <summary>
            This class represents a generic Pop3 command and 
            encapsulates the major operations when executing a
            Pop3 command against a Pop3 Server.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.#ctor(System.IO.Stream,System.Boolean,FOX.COMMON.Pop3State)">
            <summary>
            Initializes a new instance of the <see cref="!:Pop3CommandBase"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="isMultiline">if set to <c>true</c> [is multiline].</param>
            <param name="validExecuteState">State of the valid execute.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.CreateRequestMessage">
            <summary>
            Abstract method intended for inheritors to 
            build out the byte[] request message for 
            the specific command.
            </summary>
            <returns>The byte[] containing the request message.</returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.Send(System.Byte[])">
            <summary>
            Sends the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.Execute(FOX.COMMON.Pop3State)">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.EnsurePop3State(FOX.COMMON.Pop3State)">
            <summary>
            Ensures the state of the POP3.
            </summary>
            <param name="currentState">State of the current.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.</returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.GetResponse">
            <summary>
            Gets the response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.Receive(System.AsyncCallback)">
            <summary>
            Receives the specified callback.
            </summary>
            <param name="callback">The callback.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.WriteReceivedBytesToBuffer(System.Int32)">
            <summary>
            Writes the received bytes to buffer.
            </summary>
            <param name="bytesReceived">The bytes received.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.GetSingleLineResponseCallback(System.IAsyncResult)">
            <summary>
            Gets the single line response callback.
            </summary>
            <param name="ar">The ar.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.GetMultiLineResponseCallback(System.IAsyncResult)">
            <summary>
            Gets the multi line response callback.
            </summary>
            <param name="ar">The ar.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.GetRequestMessage(System.String[])">
            <summary>
            Gets the request message.
            </summary>
            <param name="args">The args.</param>
            <returns>A byte[] request message to send to the host.</returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.StripPop3HostMessage(System.Byte[],System.String)">
            <summary>
            Strips the POP3 host message.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="header">The header.</param>
            <returns>A <c>MemoryStream</c> without the Pop3 server message.</returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Command`1.GetResponseLines(System.IO.MemoryStream)">
            <summary>
            Gets the response lines.
            </summary>
            <param name="stream">The stream.</param>
            <returns>A string[] of Pop3 response lines.</returns>
        </member>
        <member name="P:FOX.COMMON.Pop3Command`1.IsMultiline">
            <summary>
            Sets a value indicating whether this instance is multiline.
            </summary>
            <value>
            	<c>true</c> if this instance is multiline; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:FOX.COMMON.RetrCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.RetrCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:FOX.COMMON.RetrCommand.CreateRequestMessage">
            <summary>
            Creates the RETR request message.
            </summary>
            <returns>
            The byte[] containing the RETR request message.
            </returns>
        </member>
        <member name="M:FOX.COMMON.RetrCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:FOX.COMMON.PassCommand">
            <summary>
            This class represents the Pop3 PASS command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.PassCommand.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.PassCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:FOX.COMMON.PassCommand.CreateRequestMessage">
            <summary>
            Creates the PASS request message.
            </summary>
            <returns>
            The byte[] containing the PASS request message.
            </returns>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.String2Json(System.String)">
            <summary>
            过滤特殊字符
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.StringFormat(System.String,System.Type)">
            <summary>
            格式化字符型、日期型、布尔型
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0})">
            <summary>
            List转换成Json
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ListToJson``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            List转换成Json 
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Object)">
            <summary> 
            对象转换为Json 
            </summary> 
            <param name="jsonObject">对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Collections.IEnumerable)">
            <summary> 
            对象集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToArrayString(System.Collections.IEnumerable)">
            <summary> 
            普通集合转换Json 
            </summary> 
            <param name="array">集合对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Data.DataSet)">
            <summary> 
            DataSet转换为Json 
            </summary> 
            <param name="dataSet">DataSet对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Data.DataTable)">
            <summary> 
            Datatable转换为Json 
            </summary> 
            <param name="table">Datatable对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Data.DataTable,System.String)">
            <summary>
            DataTable转换为Json 
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConvertJson.ToJson(System.Data.Common.DbDataReader)">
            <summary> 
            DataReader转换为Json 
            </summary> 
            <param name="dataReader">DataReader对象</param> 
            <returns>Json字符串</returns> 
        </member>
        <member name="M:FOX.COMMON.ExportExcel.ExportData(System.Web.UI.WebControls.GridView)">
            <summary>
            导出Excel
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Add(System.String,System.String)">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Adds(System.String,System.String[])">
            <summary>
            添加Session，调动有效期为20分钟
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Add(System.String,System.String,System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValue">Session值</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Adds(System.String,System.String[],System.Int32)">
            <summary>
            添加Session
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <param name="strValues">Session值数组</param>
            <param name="iExpires">调动有效期（分钟）</param>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Get(System.String)">
            <summary>
            读取某个Session对象值
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值</returns>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Gets(System.String)">
            <summary>
            读取某个Session对象值数组
            </summary>
            <param name="strSessionName">Session对象名称</param>
            <returns>Session对象值数组</returns>
        </member>
        <member name="M:FOX.COMMON.SessionHelper2.Del(System.String)">
            <summary>
            删除某个Session对象
            </summary>
            <param name="strSessionName">Session对象名称</param>
        </member>
        <member name="T:FOX.COMMON.SessionHelper">
            <summary>
            Session 操作类
            1、GetSession(string name)根据session名获取session对象
            2、SetSession(string name, object val)设置session
            </summary>
        </member>
        <member name="M:FOX.COMMON.SessionHelper.GetSession(System.String)">
            <summary>
            根据session名获取session对象
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.SessionHelper.SetSession(System.String,System.Object)">
            <summary>
            设置session
            </summary>
            <param name="name">session 名</param>
            <param name="val">session 值</param>
        </member>
        <member name="T:FOX.COMMON.Resources">
            <summary>
            BUResourceManager
            资源管理器
            
            修改纪录
            	2007.05.16 版本：1.0 JiRiGaLa	重新调整代码的规范化。
            
            版本：1.0
            
            <author>
            	<name>JiRiGaLa</name>
            	<date>2007.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="M:FOX.COMMON.Resources.Set(System.String,System.String)">
            <summary>
            JiRiGaLa 2007.05.02
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.AppMessage">
             <summary>
            	BUBaseAppMessage
             通用消息控制基类
             
             修改纪录
            		2007.05.17 版本：1.0	JiRiGaLa 建立，为了提高效率分开建立了类。
            	
             版本：3.1
            
             <author>
            		<name>JiRiGaLa</name>
            		<date>2007.05.17</date>
             </author> 
             </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0000">
            <summary>
            提示信息.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0001">
            <summary>
            发生未知错误.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0002">
            <summary>
            数据库联接不正常.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0003">
            <summary>
            WebService联接不正常.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0004">
            <summary>
            任何数据未被修改.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0005">
            <summary>
            记录未找到,可能已被其他人删除.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0006">
            <summary>
            数据已被其他人修改,请按F5键,重新刷新获得数据.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0007">
            <summary>
            '{O}'不允许为空,请输入.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0008">
            <summary>
            {0} 已存在,不可以重复.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0009">
            <summary>
            新增成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0010">
            <summary>
            更新成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0011">
            <summary>
            保存成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0012">
            <summary>
            批量保存成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0013">
            <summary>
            删除成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0014">
            <summary>
            批量删除成功.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0015">
            <summary>
            您确认删除吗?
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0016">
            <summary>
            您确认删除 '{0}'吗?
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0017">
            <summary>
            当前记录不允许被删除.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0018">
            <summary>
            当前记录 '{0}' 不允许被删除.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0019">
            <summary>
            当前记录不允许被编辑,请按F5键,重新获取数据最新数据.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0020">
            <summary>
            当前记录 '{0}' 不允许被编辑,请按F5键,重新获取数据最新数据.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0021">
            <summary>
            当前记录已是第一条记录.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0022">
            <summary>
            当前记录已是最后一条记录.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0023">
            <summary>
            请至少选择一项.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0024">
            <summary>
            请至少选择一项 '{0}'.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0025">
            <summary>
            '{0}'不能大于'{1}'.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0026">
            <summary>
            '{0}'不能小于'{1}'.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0027">
            <summary>
            '{0}'不能等于'{1}'.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0028">
            <summary>
            输入的'{0}'不是有效的日期.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0029">
            <summary>
            输入的'{0}'不是有效的字符.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0030">
            <summary>
            输入的'{0}'不是有效的数字.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0031">
            <summary>
            输入的'{0}'不是有效的金额.
            </summary>
        </member>
        <!-- 忽略成員 "F:FOX.COMMON.AppMessage.MSG0032" 中格式錯誤的 XML 註解 -->
        <member name="F:FOX.COMMON.AppMessage.MSG0033">
            <summary>
            数据已经被引用,有关联数据在
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0034">
            <summary>
            数据已经被引用,有关联数据在.是否强制删除数据?
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0035">
            <summary>
            {0} 有子节点不允许被删除.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0036">
            <summary>
            {0} 不能移动到 {1}.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0037">
            <summary>
            {0} 下的子节点不能移动到 {1}.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0038">
            <summary>
            确认移动 {0} 到 {1} 吗?
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0039">
            <summary>
            '{0}'不等于'{1}'.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0040">
            <summary>
            {0} 错误.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0041">
            <summary>
            确认审核通过吗?.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0042">
            <summary>
            确认驳回吗?.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0043">
            <summary>
            成功锁定数据.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0044">
            <summary>
            不能锁定数据.
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0045">
            <summary>
            数据被修改提示
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0046">
            <summary>
            最近 {0} 次内密码不能重复。
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0047">
            <summary>
            密码已过期，账户被锁定，请联系系统管理员。
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0065">
            <summary>
            数据已经改变，不保存数据？
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0075">
            <summary>
            您确认移除吗?
            </summary>
        </member>
        <member name="F:FOX.COMMON.AppMessage.MSG0076">
            <summary>
            您确认移除 '{0}'吗?
            </summary>
        </member>
        <member name="M:FOX.COMMON.AppMessage.Format(System.String,System.String[])">
            <summary>
            格式化一个资源字符串
            </summary>
            <param name="value">目标字符串</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FOX.COMMON.AppMessage.GetMessage(System.String)">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源代码</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FOX.COMMON.AppMessage.GetMessage(System.String,System.String[])">
            <summary>
            读取一个资源定义
            </summary>
            <param name="id">资源代码</param>
            <param name="messages">传入的信息</param>
            <returns>字符串</returns>
        </member>
        <member name="T:FOX.COMMON.StatCommand">
            <summary>
            This class represents the Pop3 STAT command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.StatCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.StatCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:FOX.COMMON.StatCommand.CreateRequestMessage">
            <summary>
            Creates the STAT request message.
            </summary>
            <returns>
            The byte[] containing the STAT request message.
            </returns>
        </member>
        <member name="M:FOX.COMMON.StatCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:FOX.COMMON.EcanConvertToCh">
            <summary>
            汉字转拼音类
            </summary>
        </member>
        <member name="M:FOX.COMMON.EcanConvertToCh.convertCh(System.String)">
            <summary>
            汉字转换成全拼的拼音
            </summary>
            <param name="Chstr">汉字字符串</param>
            <returns>转换后的拼音字符串</returns>
        </member>
        <member name="T:FOX.COMMON.Assistant">
            <summary>
            Assistant 的摘要说明。
            </summary>
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateTag(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签(flash加点击)
            </summary>
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateTag2(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签(flash无点击)
            </summary>		
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateTag(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建显示图像的标签(重载)，无宽高限制，(flash加点击)
            </summary>
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateTag2(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建显示图像的标签(重载)，无宽高限制，(flash无点击)
            </summary>
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateTagOld(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            创建显示图像的标签
            </summary>
            <param name="filename"></param>
            <param name="desc"></param>
            <param name="FileType"></param>
            <param name="LinkURL"></param>
            <param name="Width"></param>
            <param name="High"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Assistant.CreateChart(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            创建数据图形文件
            </summary>
            <param name="dt">数据源</param>
            <param name="CharType">图类型 Column,Pie</param>
            <param name="ImagePath">图像存放目录</param>
            <param name="Title">图形标题</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Assistant.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.Pop3Response">
            <summary>
            This class represents a Pop3 response message and
            is intended to be used as a base class for all other
            Pop3Response types.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Response.#ctor(System.Byte[],System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Response"/> class.
            </summary>
            <param name="responseContents">The response contents.</param>
            <param name="hostMessage">The host message.</param>
            <param name="statusIndicator">if set to <c>true</c> [status indicator].</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Response.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="responseContents">The response contents.</param>
            <returns></returns>
        </member>
        <member name="P:FOX.COMMON.Pop3Response.ResponseContents">
            <summary>
            Gets the response contents.
            </summary>
            <value>The response contents.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Response.StatusIndicator">
            <summary>
            Gets a value indicating whether message was <c>true</c> +OK or <c>false</c> -ERR
            </summary>
            <value><c>true</c> if [status indicator]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Response.HostMessage">
            <summary>
            Gets the host message.
            </summary>
            <value>The host message.</value>
        </member>
        <member name="T:FOX.COMMON.EnumFormula">
            <summary>
            EnumFormula
            </summary>
        </member>
        <member name="T:FOX.COMMON.FormulaDeal">
            <summary>
            FormulaDeal
            </summary>
        </member>
        <member name="T:FOX.COMMON.OWCChart11">
            <summary>
            利用OWC11进行作统计图的封装类。
            李天平 2005-8-31
            </summary>
        </member>
        <member name="M:FOX.COMMON.OWCChart11.CreateColumn">
            <summary>
            柱形图
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.OWCChart11.CreatePie">
            <summary>
            饼图
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.OWCChart11.CreateBar">
            <summary>
            条形图
            </summary>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.Utility">
            <summary>
            Utility 的摘要说明。
            </summary>
        </member>
        <member name="M:FOX.COMMON.Utility.ToObjectString(System.Object)">
            <summary>
            返回对象obj的String值,obj为null时返回空值。
            </summary>
            <param name="obj">对象。</param>
            <returns>字符串。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToInt(System.Object)">
            <summary>
            将对象转换为数值(Int32)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Int32数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToInt(System.Object,System.Int32)">
            <summary>
            将对象转换为数值(Int32)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Int32数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToLong(System.Object)">
            <summary>
            将对象转换为数值(Long)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Long数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToLong(System.Object,System.Int64)">
            <summary>
            将对象转换为数值(Long)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Long数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDecimal(System.Object)">
            <summary>
            将对象转换为数值(Decimal)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Decimal数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将对象转换为数值(Decimal)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Decimal数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDouble(System.Object)">
            <summary>
            将对象转换为数值(Double)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Double数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDouble(System.Object,System.Double)">
            <summary>
            将对象转换为数值(Double)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Double数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToFloat(System.Object)">
            <summary>
            将对象转换为数值(Float)类型,转换失败返回-1。
            </summary>
            <param name="obj">对象。</param>
            <returns>Float数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToFloat(System.Object,System.Single)">
            <summary>
            将对象转换为数值(Float)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Float数值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDateTime(System.Object)">
            <summary>
            将对象转换为数值(DateTime)类型,转换失败返回Now。
            </summary>
            <param name="obj">对象。</param>
            <returns>DateTime值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将对象转换为数值(DateTime)类型。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>DateTime值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToByteByBool(System.Object)">
            <summary>
            从Boolean转换成byte,转换失败返回0。
            </summary>
            <param name="obj">对象。</param>
            <returns>Byte值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToByteByBool(System.Object,System.Byte)">
            <summary>
            从Boolean转换成byte。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Byte值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToBoolByByte(System.Object)">
            <summary>
            从byte转换成Boolean,转换失败返回false。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ToBoolByByte(System.Object,System.Boolean)">
            <summary>
            从byte转换成Boolean。
            </summary>
            <param name="obj">对象。</param>
            <param name="returnValue">转换失败返回该值。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsEmpty(System.String)">
            <summary>
            判断文本obj是否为空值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsDateTime(System.Object)">
            <summary>
            判断对象是否为正确的日期值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Boolean。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsInt(System.Object)">
            <summary>
            判断对象是否为正确的Int32值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Int32值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsLong(System.Object)">
            <summary>
            判断对象是否为正确的Long值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Long值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsFloat(System.Object)">
            <summary>
            判断对象是否为正确的Float值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Float值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsDouble(System.Object)">
            <summary>
            判断对象是否为正确的Double值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Double值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsDecimal(System.Object)">
            <summary>
            判断对象是否为正确的Decimal值。
            </summary>
            <param name="obj">对象。</param>
            <returns>Decimal值。</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.StringTrimAll(System.String)">
            <summary>
            去除字符串的所有空格。
            </summary>
            <param name="text">字符串</param>
            <returns>字符串</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.NumricTrimAll(System.String)">
            <summary>
            去除数值字符串的所有空格。
            </summary>
            <param name="numricString">数值字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ArrayFind(System.Array,System.Object)">
            <summary>
            在数组中查找匹配对象类型
            </summary>
            <param name="array">数组</param>
            <param name="obj">对象</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ArrayFind(System.Array,System.String,System.Boolean)">
            <summary>
            在数组中查找匹配字符串
            </summary>
            <param name="array">数组</param>
            <param name="obj">对象</param>
            <param name="unUpLower">是否忽略大小写</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ReplaceInvertedComma(System.String)">
            <summary>
            替换字符串中的单引号。
            </summary>
            <param name="inputString">字符串</param>
            <returns>String</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.CompareByteArray(System.Byte[],System.Byte[])">
            <summary>
            判断两个字节数组是否具有相同值.
            </summary>
            <param name="bytea">字节1</param>
            <param name="byteb">字节2</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.BuildDate(System.String)">
            <summary>
            日期智能生成。
            </summary>
            <param name="inputText">字符串</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsFileExists(System.String)">
            <summary>
            检查文件是否真实存在。
            </summary>
            <param name="path">文件全名（包括路径）。</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsDirectoryExists(System.String)">
            <summary>
            检查目录是否真实存在。
            </summary>
            <param name="path">目录路径.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.FindLineTextFromFile(System.IO.FileInfo,System.String,System.Boolean)">
            <summary>
            查找文件中是否存在匹配行。
            </summary>
            <param name="fi">目标文件.</param>
            <param name="lineText">要查找的行文本.</param>
            <param name="lowerUpper">是否区分大小写.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.IsRightParent(System.Data.DataTable,System.String,System.String,System.String,System.String)">
            <summary>
            判断父子级关系是否正确。
            </summary>
            <param name="table">数据表。</param>
            <param name="columnName">子键列名。</param>
            <param name="parentColumnName">父键列名。</param>
            <param name="inputString">子键值。</param>
            <param name="compareString">父键值。</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Utility.Fomatdate(System.DateTime,System.String)">
            <summary>
            格式化日期类型，返回字符串
            </summary>
            <param name="dtime">日期</param>
            <param name="s">日期年月日间隔符号</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Utility.Datediff(System.DateTime,System.DateTime)">
            <summary>
            返回日期差
            </summary>
            <param name="sdmin">开始日期</param>
            <param name="sdmax">结束日期</param>
            <returns>日期差：负数为失败</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.Datediff(System.String,System.String)">
            <summary>
            返回日期差
            </summary>
            <param name="sdmin">开始日期</param>
            <param name="sdmax">结束日期</param>
            <returns>日期差：负数为失败</returns>
        </member>
        <member name="M:FOX.COMMON.Utility.ConvertStr(System.String)">
            <summary>
            将用户输入的字符串转换为可换行、替换Html编码、无危害数据库特殊字符、去掉首尾空白、的安全方便代码。
            </summary>
            <param name="inputString">用户输入字符串</param>
        </member>
        <member name="M:FOX.COMMON.Utility.OutputText(System.String)">
            <summary>
            将html代码显示在网页上
            </summary>
            <param name="inputString"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Utility.SetTableRows(System.Data.DataTable,System.Int32)">
            <summary>
            设置绑定到DataGrid的DataTable的记录行数，如不够则添加空行
            </summary>
            <param name="myDataTable">数据表</param>
            <param name="intPageCount">DataGrid分页时每页行数</param>
        </member>
        <member name="M:FOX.COMMON.Utility.GetSubString(System.String,System.Int32)">
            <summary>   
            截取文本，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="str">待截取的字符串</param>
            <param name="length">需计算长度的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.FormatString(System.String,System.Int32)">
            <summary>
            格式化字符串
            </summary>
            <param name="inputData">源字符串</param>
            <param name="formatlevel">0:不做验证| 1:sql语句参数| 2:存储过程参数| 3:EncodeHtml| 4:Encode+sql| 5:Encode+存储过程</param>
            <returns>返回格式化后的字符串</returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.FetchInputDigit(System.Web.HttpRequest,System.String,System.Int32)">
            <summary>
            检查Request查询字符串的键值，是否是数字，最大长度限制
            </summary>
            <param name="req">Request</param>
            <param name="inputKey">Request的键值</param>
            <param name="maxLen">最大长度</param>
            <returns>返回Request查询字符串</returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.checkString(System.String,System.Int32)">
            <summary>
            检测字符串类型
            </summary>
            <param name="inputData">输入字符串</param>
            <param name="checktype">0:不检测| 1:数字| 2:符号数字| 3: 浮点数| 4:符号浮点| 5: 中文?| 6:邮件?</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsEmail(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.SqlText(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="sqlInput">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:FOX.COMMON.PageValidate.HtmlEncode(System.String)">
            <summary>
            字符串编码
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.SetLabel(System.Web.UI.WebControls.Label,System.String)">
            <summary>
            设置Label显示Encode的字符串
            </summary>
            <param name="lbl"></param>
            <param name="txtInput"></param>
        </member>
        <member name="M:FOX.COMMON.PageValidate.Text_Length(System.String)">
            <summary>   
            计算文本长度，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="Text">需计算长度的字符串</param>
            <returns>int</returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.GetSubString(System.String,System.Int32)">
            <summary>   
            截取文本，区分中英文字符，中文算两个长度，英文算一个长度
            </summary>
            <param name="str">待截取的字符串</param>
            <param name="length">需计算长度的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.IsDateTime(System.String)">
            <summary>
            日期格式字符串判断
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageValidate.isContainSpecChar(System.String)">
            <summary>
            检查输入的参数是不是某些定义好的特殊字符：这个方法目前用于密码输入的安全检查
            </summary>
        </member>
        <member name="T:FOX.COMMON.FileDown">
            <summary>
            文件下载类
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileDown.FileNameExtension(System.String)">
            <summary>
            参数为虚拟路径
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileDown.MapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileDown.DownLoadold(System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:FOX.COMMON.FileDown.DownLoad(System.String)">
            <summary>
            分块下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
        </member>
        <member name="M:FOX.COMMON.FileDown.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="T:FOX.COMMON.QueryString">
            <summary>
            QueryString 地址栏参数
            </summary>
        </member>
        <member name="M:FOX.COMMON.QueryString.Q(System.String)">
            <summary>
            等于Request.QueryString;如果为null 返回 空“” ，否则返回Request.QueryString[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.QueryString.F(System.String)">
            <summary>
            等于  Request.Form  如果为null 返回 空“” ，否则返回 Request.Form[name]
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.QueryString.QId(System.String)">
            <summary>
            获取url中的id
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.QueryString.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:FOX.COMMON.QueryString.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:FOX.COMMON.QueryString.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="P:FOX.COMMON.QueryString.Current">
            <summary>
            HttpContext Current
            </summary>
        </member>
        <member name="P:FOX.COMMON.QueryString.Request">
            <summary>
            HttpContext Current  HttpRequest Request   get { return Current.Request;
            </summary>
        </member>
        <member name="P:FOX.COMMON.QueryString.Response">
            <summary>
             HttpContext Current  HttpRequest Request   get { return Current.Request; HttpResponse Response  return Current.Response;
            </summary>
        </member>
        <member name="T:FOX.COMMON.PDFOperation">
            <summary>
            PDF文档操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            构造函数
            </summary>
            <param name="type">页面大小(如"A4")</param>
            <param name="marginLeft">内容距左边框距离</param>
            <param name="marginRight">内容距右边框距离</param>
            <param name="marginTop">内容距上边框距离</param>
            <param name="marginBottom">内容距下边框距离</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.SetBaseFont(System.String)">
            <summary>
            设置字体
            </summary>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.SetFont(System.Single)">
            <summary>
            设置字体
            </summary>
            <param name="size">字体大小</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.SetPageSize(System.String)">
            <summary>
            设置页面大小
            </summary>
            <param name="type">页面大小(如"A4")</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.GetInstance(System.IO.Stream)">
            <summary>
            实例化文档
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.Open(System.IO.Stream)">
            <summary>
            打开文档对象
            </summary>
            <param name="os">文档相关信息（如路径，打开方式等）</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.Close">
            <summary>
            关闭打开的文档
            </summary>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.AddParagraph(System.String,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.AddParagraph(System.String,System.Single,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            添加段落
            </summary>
            <param name="content">内容</param>
            <param name="fontsize">字体大小</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="SpacingAfter">段后空行数（0为默认值）</param>
            <param name="SpacingBefore">段前空行数（0为默认值）</param>
            <param name="MultipliedLeading">行间距（0为默认值）</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.AddImage(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            添加图片
            </summary>
            <param name="path">图片路径</param>
            <param name="Alignment">对齐方式（1为居中，0为居左，2为居右）</param>
            <param name="newWidth">图片宽（0为默认值，如果宽度大于页宽将按比率缩放）</param>
            <param name="newHeight">图片高</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.AddAnchorReference(System.String,System.Single,System.String)">
            <summary>
            添加链接
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Reference">链接地址</param>
        </member>
        <member name="M:FOX.COMMON.PDFOperation.AddAnchorName(System.String,System.Single,System.String)">
            <summary>
            添加链接点
            </summary>
            <param name="Content">链接文字</param>
            <param name="FontSize">字体大小</param>
            <param name="Name">链接点名</param>
        </member>
        <member name="M:FOX.COMMON.MessageBox.Show(System.Web.UI.Page,System.String)">
            <summary>
            显示消息提示对话框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:FOX.COMMON.MessageBox.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            控件点击 消息确认提示框
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="M:FOX.COMMON.MessageBox.ShowAndRedirect(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示消息提示对话框，并进行页面跳转
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="msg">提示信息</param>
            <param name="url">跳转的目标URL</param>
        </member>
        <member name="M:FOX.COMMON.MessageBox.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="T:FOX.COMMON.StatResponse">
            <summary>
            This class represents the resulting Pop3 response from a STAT command
            executed against a Pop3 server.
            </summary>
        </member>
        <member name="M:FOX.COMMON.StatResponse.#ctor(FOX.COMMON.Pop3Response,System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.StatResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="messageCount">The message count.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="P:FOX.COMMON.StatResponse.MessageCount">
            <summary>
            Gets the message count.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:FOX.COMMON.StatResponse.Octets">
            <summary>
            Gets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="T:FOX.COMMON.Pop3Responses">
            <summary>
            This class contains the Positive and Negative starting response strings
            that can be returned from a Pop3 server.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Responses.Ok">
            <summary>
            The +OK starting of a positive response from the server.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Responses.Err">
            <summary>
            The -ERR starting of a negative response from the server.
            </summary>
        </member>
        <member name="T:FOX.COMMON.ListCommand">
            <summary>
            This class represents both the multiline and single line Pop3 LIST command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.ListCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.ListCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:FOX.COMMON.ListCommand.CreateRequestMessage">
            <summary>
            Creates the LIST request message.
            </summary>
            <returns>The byte[] containing the LIST request message.</returns>
        </member>
        <member name="M:FOX.COMMON.ListCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>A <c>ListResponse</c> containing the results of the Pop3 LIST command.</returns>
        </member>
        <member name="T:FOX.COMMON.ConnectCommand">
            <summary>
            Performs the connect to a Pop3 server and returns a Pop3 
            response indicating the attempt to connect results and the
            network stream to use for all subsequent Pop3 Commands.
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConnectCommand.#ctor(System.Net.Sockets.TcpClient,System.String,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.ConnectCommand"/> class.
            </summary>
            <remarks>
            Even though a network stream is provided to the base constructor the stream
            does not already exist so we have to send in a dummy stream until the actual
            connect has taken place.  Then we'll reset network stream to the 
            stream made available by the TcpClient.GetStream() to read the data returned
            after a connect.
            </remarks>
            <param name="client">The client.</param>
            <param name="hostname">The hostname.</param>
            <param name="port">The port.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
        </member>
        <member name="M:FOX.COMMON.ConnectCommand.CreateRequestMessage">
            <summary>
            Creates the connect request message.
            </summary>
            <returns>A byte[] containing connect request message.</returns>
        </member>
        <member name="M:FOX.COMMON.ConnectCommand.Execute(FOX.COMMON.Pop3State)">
            <summary>
            Executes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.ConnectCommand.SetClientStream">
            <summary>
            Sets the client stream.
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConnectCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:FOX.COMMON.Rand">
            <summary>
            验证码类
            </summary>
        </member>
        <member name="M:FOX.COMMON.Rand.Number(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
        </member>
        <member name="M:FOX.COMMON.Rand.Number(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:FOX.COMMON.Rand.Str(System.Int32)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:FOX.COMMON.Rand.Str(System.Int32,System.Boolean)">
            <summary>
            生成随机字母与数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="M:FOX.COMMON.Rand.Str_char(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
        </member>
        <member name="M:FOX.COMMON.Rand.Str_char(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
        </member>
        <member name="T:FOX.COMMON.YZMHelper">
            <summary>
            验证图片类
            </summary>
        </member>
        <member name="M:FOX.COMMON.YZMHelper.Next(System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="max">最大值</param>
        </member>
        <member name="M:FOX.COMMON.YZMHelper.Next(System.Int32,System.Int32)">
            <summary>
            获得下一个随机数
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:FOX.COMMON.YZMHelper.CreateImage">
            <summary>
            绘制验证码
            </summary>
        </member>
        <member name="M:FOX.COMMON.YZMHelper.GetRandomColor">
            <summary>
            字体随机颜色
            </summary>
        </member>
        <member name="M:FOX.COMMON.YZMHelper.TwistImage(System.Drawing.Bitmap,System.Boolean,System.Double,System.Double)">
            <summary>
            正弦曲线Wave扭曲图片
            </summary>
            <param name="srcBmp">图片路径</param>
            <param name="bXDir">如果扭曲则选择为True</param>
            <param name="nMultValue">波形的幅度倍数，越大扭曲的程度越高,一般为3</param>
            <param name="dPhase">波形的起始相位,取值区间[0-2*PI)</param>
        </member>
        <member name="P:FOX.COMMON.YZMHelper.Text">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:FOX.COMMON.YZMHelper.Image">
            <summary>
            验证码图片
            </summary>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.XMLLoad">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:FOX.COMMON.XMLProcess.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:FOX.COMMON.XMLProcess.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:FOX.COMMON.XmlHelper">
            <summary>
            Xml的操作公共类
            </summary>    
        </member>
        <member name="F:FOX.COMMON.XmlHelper._filePath">
            <summary>
            XML文件的物理路径
            </summary>
        </member>
        <member name="F:FOX.COMMON.XmlHelper._xml">
            <summary>
            Xml文档
            </summary>
        </member>
        <member name="F:FOX.COMMON.XmlHelper._element">
            <summary>
            XML的根节点
            </summary>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.#ctor(System.String)">
            <summary>
            实例化XmlHelper对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.CreateXMLElement">
            <summary>
            创建XML的根节点
            </summary>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.GetNode(System.String)">
            <summary>
            获取指定XPath表达式的节点对象
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.GetValue(System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.GetAttributeValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.AppendNode(System.Xml.XmlNode)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将任意节点插入到当前Xml文件中。
            </summary>        
            <param name="xmlNode">要插入的Xml节点</param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.AppendNode(System.Data.DataSet)">
            <summary>
            1. 功能：新增节点。
            2. 使用条件：将DataSet中的第一条记录插入Xml文件中。
            </summary>        
            <param name="ds">DataSet的实例，该DataSet中应该只有一条记录</param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.RemoveNode(System.String)">
            <summary>
            删除指定XPath表达式的节点
            </summary>        
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.Save">
            <summary>
            保存XML文件
            </summary>        
        </member>
        <member name="M:FOX.COMMON.XmlHelper.CreateRootElement(System.String)">
            <summary>
            创建根节点对象
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>        
        </member>
        <member name="M:FOX.COMMON.XmlHelper.GetValue(System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
        </member>
        <member name="M:FOX.COMMON.XmlHelper.GetAttributeValue(System.String,System.String,System.String)">
            <summary>
            获取指定XPath表达式节点的属性值
            </summary>
            <param name="xmlFilePath">Xml文件的相对路径</param>
            <param name="xPath">XPath表达式,
            范例1: @"Skill/First/SkillItem", 等效于 @"//Skill/First/SkillItem"
            范例2: @"Table[USERNAME='a']" , []表示筛选,USERNAME是Table下的一个子节点.
            范例3: @"ApplyPost/Item[@itemName='岗位编号']",@itemName是Item节点的属性.
            </param>
            <param name="attributeName">属性名</param>
        </member>
        <member name="T:FOX.COMMON.Encrypt">
            <summary>
            加密解密实用类。
            </summary>
        </member>
        <member name="M:FOX.COMMON.Encrypt.Encode(System.String)">
            <summary>
            加密。
            </summary>
            <param name="m_Need_Encode_String"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Encrypt.Decode(System.String)">
            <summary>
            解密。
            </summary>
            <param name="m_Need_Encode_String"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Encrypt.Md5(System.String)">
            <summary>
            md5
            </summary>
            <param name="encypStr"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.Save(System.Object,System.String)">
            <summary>
            文件化XML序列化
            </summary>
            <param name="obj">对象</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.Load(System.Type,System.String)">
            <summary>
            文件化XML反序列化
            </summary>
            <param name="type">对象类型</param>
            <param name="filename">文件路径</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.ToXml``1(``0)">
            <summary>
            文本化XML序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.FromXml``1(System.String)">
            <summary>
            文本化XML反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.ToSoap``1(``0)">
            <summary>
            SoapFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.FromSoap``1(System.String)">
            <summary>
            SoapFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.ToBinary``1(``0)">
            <summary>
            BinaryFormatter序列化
            </summary>
            <param name="item">对象</param>
        </member>
        <member name="M:FOX.COMMON.SerializeHelper.FromBinary``1(System.String)">
            <summary>
            BinaryFormatter反序列化
            </summary>
            <param name="str">字符串序列</param>
        </member>
        <member name="T:FOX.COMMON.UploadEventArgs">
            <summary>    
            上传数据参数    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.UploadEventArgs.BytesSent">
            <summary>    
            已发送的字节数    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.UploadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="T:FOX.COMMON.DownloadEventArgs">
            <summary>    
            下载数据参数    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.DownloadEventArgs.BytesReceived">
            <summary>    
            已接收的字节数    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.DownloadEventArgs.TotalBytes">
            <summary>    
            总字节数    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.DownloadEventArgs.ReceivedData">
            <summary>    
            当前缓冲区接收的数据    
            </summary>    
        </member>
        <member name="M:FOX.COMMON.WebClient.#ctor">
            <summary>    
            创建WebClient的实例    
            </summary>    
        </member>
        <member name="M:FOX.COMMON.WebClient.GetHtml(System.String)">
            <summary>    
             获取网页源代码    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.DownloadFile(System.String,System.String)">
            <summary>    
            下载文件    
            </summary>    
            <param name="url">文件URL地址</param>    
            <param name="filename">文件保存完整路径</param>    
        </member>
        <member name="M:FOX.COMMON.WebClient.GetData(System.String)">
            <summary>    
            从指定URL下载数据    
            </summary>    
            <param name="url">网址</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.Post(System.String,System.String)">
            <summary>    
            向指定URL发送文本数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">urlencode编码的文本数据</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.Post(System.String,System.Byte[])">
            <summary>    
            向指定URL发送字节数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="postData">发送的字节数组</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.Post(System.String,FOX.COMMON.MultipartForm)">
            <summary>    
            向指定网址发送mulitpart编码的数据    
            </summary>    
            <param name="url">网址</param>    
            <param name="mulitpartForm">mulitpart form data</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.GetData(System.Net.HttpWebRequest)">
            <summary>    
            读取请求返回的数据    
            </summary>    
            <param name="request">请求对象</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.PostData(System.Net.HttpWebRequest,System.Byte[])">
            <summary>    
            发送请求数据    
            </summary>    
            <param name="request">请求对象</param>    
            <param name="postData">请求发送的字节数组</param>    
        </member>
        <member name="M:FOX.COMMON.WebClient.CreateRequest(System.String,System.String)">
            <summary>    
            创建HTTP请求    
            </summary>    
            <param name="url">URL地址</param>    
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.WebClient.SaveCookiesToDisk">
            <summary>    
            将Cookie保存到磁盘    
            </summary>    
        </member>
        <member name="M:FOX.COMMON.WebClient.LoadCookiesFromDisk">
            <summary>    
            从磁盘加载Cookie    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.BufferSize">
            <summary>    
            设置发送和接收的数据缓冲大小    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.ResponseHeaders">
            <summary>    
            获取响应头集合    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.RequestHeaders">
            <summary>    
            获取请求头集合    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.Proxy">
            <summary>    
            获取或设置代理    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.Encoding">
            <summary>    
            获取或设置请求与响应的文本编码方式    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.RespHtml">
            <summary>    
            获取或设置响应的html代码    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.WebClient.CookieContainer">
            <summary>    
            获取或设置与请求关联的Cookie容器    
            </summary>    
        </member>
        <member name="T:FOX.COMMON.MultipartForm">
            <summary>    
            对文件和文本数据进行Multipart形式的编码    
            </summary>    
        </member>
        <member name="M:FOX.COMMON.MultipartForm.#ctor">
            <summary>    
            实例化    
            </summary>    
        </member>
        <member name="M:FOX.COMMON.MultipartForm.AddFlie(System.String,System.String)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件的完整路径</param>    
        </member>
        <member name="M:FOX.COMMON.MultipartForm.AddFlie(System.String,System.String,System.Byte[],System.Int32)">
            <summary>    
            添加一个文件    
            </summary>    
            <param name="name">文件域名称</param>    
            <param name="filename">文件名</param>    
            <param name="fileData">文件二进制数据</param>    
            <param name="dataLength">二进制数据大小</param>    
        </member>
        <member name="M:FOX.COMMON.MultipartForm.AddString(System.String,System.String)">
            <summary>    
            添加字符串    
            </summary>    
            <param name="name">文本域名称</param>    
            <param name="value">文本值</param>    
        </member>
        <member name="M:FOX.COMMON.MultipartForm.GetContentType(System.String)">
            <summary>    
            从注册表获取文件类型    
            </summary>    
            <param name="filename">包含扩展名的文件名</param>    
            <returns>如：application/stream</returns>    
        </member>
        <member name="P:FOX.COMMON.MultipartForm.FormData">
            <summary>    
            获取编码后的字节数组    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.MultipartForm.ContentType">
            <summary>    
            获取此编码内容的类型    
            </summary>    
        </member>
        <member name="P:FOX.COMMON.MultipartForm.StringEncoding">
            <summary>    
            获取或设置对字符串采用的编码类型    
            </summary>    
        </member>
        <member name="T:FOX.COMMON.ShowMessageBox">
            <summary>
            页面常用方法包装
            </summary>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMG(System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMessage(System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMessage_link(System.String,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMessage(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
            <param name="delayms"></param>
            <param name="leftSpace"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowMessage_link(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            显示提示信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
            <param name="delayms"></param>
            <param name="leftSpace"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowExceptionMessage(System.Exception)">
            <summary>
            显示异常信息
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowExceptionMessage(System.String)">
            <summary>
            显示异常信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowExceptionMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示异常信息
            </summary>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.GetShowModalWindowScript(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            返回把指定链接地址显示模态窗口的脚本
            </summary>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowModalWindow(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            把指定链接地址显示模态窗口
            </summary>
            <param name="wid">窗口ID</param>
            <param name="title">标题</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
            <param name="url">链接地址</param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowCilentModalWindow(System.String,System.Web.UI.WebControls.TableCell,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            为指定控件绑定前台脚本：显示模态窗口
            </summary>
            <param name="cell"></param>
            <param name="eventName"></param>
            <param name="wid"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="url"></param>
            <param name="isScriptEnd"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="message"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.ShowCilentConfirm(System.Web.UI.WebControls.WebControl,System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            显示客户端确认窗口
            </summary>
            <param name="control"></param>
            <param name="eventName"></param>
            <param name="title"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="message"></param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.WriteScript(System.String)">
            <summary>
            写javascript脚本
            </summary>
            <param name="script">脚本内容</param>
        </member>
        <member name="M:FOX.COMMON.ShowMessageBox.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="F:FOX.COMMON.Pop3State.Unknown">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3State.Authorization">
            <summary>
            Connected to Pop3 server, but not authorized.
            May issue any of the following commands QUIT, USER, PASS
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3State.Transaction">
            <summary>
            Authorized to Pop3 server, can issue any of the following commands;
            STAT, LIST, RETR, DELE, RSET
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3State.Update">
            <summary>
            Quit command was sent to server indicating deleted
            messages should be removed.
            </summary>
        </member>
        <member name="T:FOX.COMMON.ListResponse">
            <summary>
            This class represents the response message 
            returned from both a single line and multi line 
            Pop3 LIST Command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.ListResponse.#ctor(FOX.COMMON.Pop3Response,System.Collections.Generic.List{FOX.COMMON.Pop3ListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.ListResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="items">The items.</param>
        </member>
        <member name="P:FOX.COMMON.ListResponse.Items">
            <summary>
            Gets or sets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:FOX.COMMON.ListResponse.MessageNumber">
            <summary>
            Gets the message number.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:FOX.COMMON.ListResponse.Octets">
            <summary>
            Gets number of octets.
            </summary>
            <value>The number of octets.</value>
        </member>
        <member name="T:FOX.COMMON.IpHelper">
            <summary>
            共用工具类
            </summary>
        </member>
        <member name="M:FOX.COMMON.IpHelper.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="T:FOX.COMMON.FileExtension">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="T:FOX.COMMON.FileValidation">
            <summary>
            图片检测类
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileValidation.IsAllowedExtension(System.Web.HttpPostedFile,FOX.COMMON.FileExtension[])">
            <summary>
            是否允许
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileValidation.IsSecureUploadPhoto(System.Web.HttpPostedFile)">
            <summary>
            上传前的图片是否可靠
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileValidation.IsSecureUpfilePhoto(System.String)">
            <summary>
            上传后的图片是否安全
            </summary>
            <param name="photoFile">物理地址</param>
        </member>
        <member name="T:FOX.COMMON.ImageUpload">
            <summary>
            图片上传类
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageUpload.GetExt(System.String)">
            <summary>
            获取文件的后缀名 
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageUpload.FileName(System.String)">
            <summary>
            获取输出文件的文件名
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageUpload.IsUpload(System.String)">
            <summary>
            检查上传的文件的类型，是否允许上传。
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.Error">
            <summary>
            Error返回值
            1、没有上传的文件
            2、类型不允许
            3、大小超限
            4、未知错误
            0、上传成功。 
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.MaxSize">
            <summary>
            最大单个上传文件
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.FileType">
            <summary>
            所支持的上传类型用";"隔开 
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.SavePath">
            <summary>
            保存文件的实际路径 
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.SaveType">
            <summary>
            上传文件的类型，0代表自动生成文件名
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.FormFile">
            <summary>
            上传控件
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.InFileName">
            <summary>
            非自动生成文件名设置。
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.OutFileName">
            <summary>
            输出文件名
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.OutThumbFileName">
            <summary>
            输出的缩略图文件名
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.Iss">
            <summary>
            是否有缩略图生成.
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.Width">
            <summary>
            获取上传图片的宽度
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.Height">
            <summary>
            获取上传图片的高度
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.sWidth">
            <summary>
            设置缩略图的宽度
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.sHeight">
            <summary>
            设置缩略图的高度
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.IsCreateImg">
            <summary>
            是否生成缩略图
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.IsDraw">
            <summary>
            是否加水印
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.DrawStyle">
            <summary>
            设置加水印的方式
            0:文字水印模式
            1:图片水印模式
            2:不加
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.DrawString_x">
            <summary>
            绘制文本的Ｘ坐标（左上角）
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.DrawString_y">
            <summary>
            绘制文本的Ｙ坐标（左上角）
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.AddText">
            <summary>
            设置文字水印内容
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.Font">
            <summary>
            设置文字水印字体
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.FontSize">
            <summary>
            设置文字水印字的大小
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.FileSize">
            <summary>
            文件大小
            </summary>
        </member>
        <member name="P:FOX.COMMON.ImageUpload.CopyIamgePath">
            <summary>
            图片水印模式下的覆盖图片的实际地址
            </summary>
        </member>
        <member name="T:FOX.COMMON.ConfigHelper">
            <summary>
            web.config操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.ConfigHelper.GetConfigString(System.String)">
            <summary>
            得到AppSettings中的配置字符串信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.ConfigHelper.GetConfigBool(System.String)">
            <summary>
            得到AppSettings中的配置Bool信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.ConfigHelper.GetConfigDecimal(System.String)">
            <summary>
            得到AppSettings中的配置Decimal信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.ConfigHelper.GetConfigInt(System.String)">
            <summary>
            得到AppSettings中的配置int信息
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.WebSitePathHelper">
            <summary>
            网站路径操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.WebSitePathHelper.GetWebPath(System.String)">
            <summary>
            根据给出的相对地址获取网站绝对地址
            </summary>
            <param name="localPath">相对地址</param>
            <returns>绝对地址</returns>
        </member>
        <member name="M:FOX.COMMON.WebSitePathHelper.GetWebPath">
            <summary>
             获取网站绝对地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.WebSitePathHelper.GetFilePath(System.String)">
            <summary>
            根据相对路径或绝对路径获取绝对路径
            </summary>
            <param name="localPath">相对路径或绝对路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="T:FOX.COMMON.WebSitePathHelper.SortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Photo">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Article">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Diary">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Pic">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Music">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.AddressList">
            <summary>
            
            </summary>
        </member>
        <member name="F:FOX.COMMON.WebSitePathHelper.SortType.Favorite">
            <summary>
            
            </summary>
        </member>
        <member name="T:FOX.COMMON.SegList">
            <summary>
            分词辅助类
            </summary>
        </member>
        <member name="M:FOX.COMMON.SegList.Sort">
            <summary>
            按长度排序
            </summary>
        </member>
        <member name="M:FOX.COMMON.SegList.Sort(FOX.COMMON.SegList)">
            <summary>
            按长度排序
            </summary>
        </member>
        <member name="T:FOX.COMMON.Segment">
            <summary>
            分词类
            </summary>
        </member>
        <member name="F:FOX.COMMON.Segment.m_Separator">
            <summary>
            分隔符
            </summary>
        </member>
        <member name="F:FOX.COMMON.Segment.strChinese">
            <summary>
            用于验证汉字的正则表达式
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.SetCache(System.String,System.Object)">
            <summary>
            数据缓存函数
            </summary>
            <param name="key">索引键</param>
            <param name="val">缓存的数据</param>
        </member>
        <member name="M:FOX.COMMON.Segment.GetCache(System.String)">
            <summary>
            读取缓存
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.InitWordDics">
            <summary>
            加载词列表
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.LoadWords(System.String,System.Collections.ArrayList)">
            <summary>
            加载文本词组到ArrayList
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.OutWords">
            <summary>
            输出词列表
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.OutArrayList(System.Collections.ArrayList)">
            <summary>
            输出ArrayList
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.SegmentText(System.String)">
            <summary>
            分词过程,不支持回车 
            </summary>
            <param name="strText">要分词的文本</param>
            <returns>分词后的文本</returns>
        </member>
        <member name="M:FOX.COMMON.Segment.SegmentText(System.String,System.Boolean)">
            <summary>
            重载分词过程,支持回车
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.GetCharType(System.String)">
            <summary>
            判断字符类型,0为未知,1为数字,2为字母,3为汉字,4为汉字数字
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.SortDic">
            <summary>
            对加载的词典排序并重新写入
            </summary>
        </member>
        <member name="M:FOX.COMMON.Segment.SortDic(System.Boolean)">
            <summary>
            对加载的词典排序并重新写入
            </summary>
            <param name="Reload">是否重新加载</param>
        </member>
        <member name="M:FOX.COMMON.Segment.Optimize">
            <summary>
            删除两行完全相同的词,暂时无用!
            </summary>
            <returns>相同词条个数</returns>
        </member>
        <member name="P:FOX.COMMON.Segment.DicPath">
            <summary>
            基本词典路径
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.NoisePath">
            <summary>
            暂时无用
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.NumberPath">
            <summary>
            数字词典路径
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.WordPath">
            <summary>
            字母词典路径
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.PrefixPath">
            <summary>
            姓名前缀字典 用于纠错姓名
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.EnablePrefix">
            <summary>
            是否开启姓名纠错功能
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.EventTime">
            <summary>
            用时每次进行加载或分词动作后改属性表示为上一次动作所用时间
            已精确到毫秒但分词操作在字符串较短时可能为0
            </summary>
        </member>
        <member name="P:FOX.COMMON.Segment.Separator">
            <summary>
            分隔符,默认为空格
            </summary>
        </member>
        <member name="M:FOX.COMMON.RandomOperate.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.INIFile">
            <summary>
            INI文件读写类。
            </summary>
        </member>
        <member name="M:FOX.COMMON.INIFile.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:FOX.COMMON.INIFile.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.INIFile.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:FOX.COMMON.INIFile.ClearSection(System.String)">
            <summary>
            删除ini文件下personal段落下的所有键
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:FOX.COMMON.GridViewExport">
            <summary>
            Summary description for GridViewExport
            </summary>
        </member>
        <member name="M:FOX.COMMON.GridViewExport.PrepareControlForExport(System.Web.UI.Control)">
            <summary>
            Replace any of the contained controls with literals
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:FOX.COMMON.GridViewExport.OutputExcel(System.Web.UI.WebControls.GridView,System.Data.DataTable,System.String)">
            <summary>
            导出Grid的数据(全部)到Excel
            字段全部为BoundField类型时可用
            要是字段为TemplateField模板型时就取不到数据
            </summary>
            <param name="grid">grid的ID</param>
            <param name="dt">数据源</param>
            <param name="excelFileName">要导出Excel的文件名</param>
        </member>
        <member name="T:FOX.COMMON.CsvHelper">
            <summary>
            CSV文件转换类
            </summary>
        </member>
        <member name="M:FOX.COMMON.CsvHelper.dt2csv(System.Data.DataTable,System.String,System.String,System.String)">
            <summary>
            导出报表为Csv
            </summary>
            <param name="dt">DataTable</param>
            <param name="strFilePath">物理路径</param>
            <param name="tableheader">表头</param>
            <param name="columname">字段标题,逗号分隔</param>
        </member>
        <member name="M:FOX.COMMON.CsvHelper.csv2dt(System.String,System.Int32,System.Data.DataTable)">
            <summary>
            将Csv读入DataTable
            </summary>
            <param name="filePath">csv文件路径</param>
            <param name="n">表示第n行是字段title,第n+1行是记录开始</param>
        </member>
        <member name="T:FOX.COMMON.RSACryption">
            <summary> 
            RSA加密解密及RSA签名和验证
            </summary> 
        </member>
        <member name="M:FOX.COMMON.RSACryption.RSAKey(System.String@,System.String@)">
            <summary>
            RSA 的密钥产生 产生私钥 和公钥 
            </summary>
            <param name="xmlKeys"></param>
            <param name="xmlPublicKey"></param>
        </member>
        <member name="T:FOX.COMMON.ThumbnailMod">
            <summary>
            枚举,生成缩略图模式
            </summary>
        </member>
        <member name="F:FOX.COMMON.ThumbnailMod.HW">
            <summary>
            HW
            </summary>
        </member>
        <member name="F:FOX.COMMON.ThumbnailMod.W">
            <summary>
            W
            </summary>
        </member>
        <member name="F:FOX.COMMON.ThumbnailMod.H">
            <summary>
            H
            </summary>
        </member>
        <member name="F:FOX.COMMON.ThumbnailMod.Cut">
            <summary>
            Cut
            </summary>
        </member>
        <member name="T:FOX.COMMON.PicDeal">
            <summary>
            操作图片类, 生成缩略图,添加水印
            </summary>
        </member>
        <member name="M:FOX.COMMON.PicDeal.MakeThumbnail(System.String,System.Int32,System.Int32,FOX.COMMON.ThumbnailMod)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PicDeal.AddWaterPic(System.String,System.String)">
            <summary>
            在图片上生成图片水印
            </summary>
            <param name="Path">原服务器图片路径</param>
            <param name="Path_sypf">水印图片路径</param>
        </member>
        <member name="M:FOX.COMMON.PicDeal.GetImgType">
            <summary>
            公共方法
            </summary>
        </member>
        <member name="M:FOX.COMMON.PicDeal.ResizeImage(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            返回新图片尺寸
            </summary>
            <param name="width">原始宽</param>
            <param name="height">原始高</param>
            <param name="maxWidth">新图片最大宽</param>
            <param name="maxHeight">新图片最大高</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.TopCommand.#ctor(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.TopCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageNumber">The message number.</param>
            <param name="lineCount">The line count.</param>
        </member>
        <member name="M:FOX.COMMON.TopCommand.CreateRequestMessage">
            <summary>
            Abstract method intended for inheritors to
            build out the byte[] request message for
            the specific command.
            </summary>
            <returns>
            The byte[] containing the request message.
            </returns>
        </member>
        <member name="M:FOX.COMMON.TopCommand.CreateResponse(System.Byte[])">
            <summary>
            Creates the response.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>
            The <c>Pop3Response</c> containing the results of the
            Pop3 command execution.
            </returns>
        </member>
        <member name="T:FOX.COMMON.DeleCommand">
            <summary>
            This class represents the Pop3 DELE command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.DeleCommand.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.DeleCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:FOX.COMMON.DeleCommand.CreateRequestMessage">
            <summary>
            Creates the DELE request message.
            </summary>
            <returns>
            The byte[] containing the DELE request message.
            </returns>
        </member>
        <!-- 忽略成員 "T:FOX.COMMON.StringPlus" 中格式錯誤的 XML 註解 -->
        <member name="M:FOX.COMMON.StringPlus.GetStrArray(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.GetStrArray(System.String)">
            <summary>
            把字符串转 按照, 分割 换为数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- 忽略成員 "M:FOX.COMMON.StringPlus.GetArrayStr(System.Collections.Generic.List{System.String},System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:FOX.COMMON.StringPlus.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:FOX.COMMON.StringPlus.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:FOX.COMMON.StringPlus.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.ToDBC(System.String)">
            <summary>
             转半角的函数(SBC case)
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.GetSubStringList(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.GetCleanStyle(System.String,System.String)">
            <summary>
             将字符串样式转换为纯字符串
            </summary>
            <param name="StrList"></param>
            <param name="SplitString"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.GetNewStyle(System.String,System.String,System.String,System.String@)">
            <summary>
            将字符串转换为新样式
            </summary>
            <param name="StrList"></param>
            <param name="NewStyle"></param>
            <param name="SplitString"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.SplitMulti(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="str"></param>
            <param name="splitstr"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。(0除外)
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:FOX.COMMON.StringPlus.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="T:FOX.COMMON.HashEncode">
            <summary>
            得到随机安全码（哈希加密）。
            </summary>
        </member>
        <member name="M:FOX.COMMON.HashEncode.GetSecurity">
            <summary>
            得到随机哈希加密字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.HashEncode.GetRandomValue">
            <summary>
            得到一个随机数值
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.HashEncode.HashEncoding(System.String)">
            <summary>
            哈希加密一个字符串
            </summary>
            <param name="Security"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.DESEncrypt">
            <summary>
            DES加密/解密类。
            </summary>
        </member>
        <member name="M:FOX.COMMON.DESEncrypt.Encrypt(System.String)">
            <summary>
            加密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DESEncrypt.Encrypt(System.String,System.String)">
            <summary> 
            加密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="M:FOX.COMMON.DESEncrypt.Decrypt(System.String)">
            <summary>
            解密
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DESEncrypt.Decrypt(System.String,System.String)">
            <summary> 
            解密数据 
            </summary> 
            <param name="Text"></param> 
            <param name="sKey"></param> 
            <returns></returns> 
        </member>
        <member name="T:FOX.COMMON.DataCache">
            <summary>
            缓存相关的操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.DataCache.GetCache(System.String)">
            <summary>
            获取当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DataCache.SetCache(System.String,System.Object)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="M:FOX.COMMON.DataCache.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置当前应用程序指定CacheKey的Cache值
            </summary>
            <param name="CacheKey"></param>
            <param name="objObject"></param>
        </member>
        <member name="T:FOX.COMMON.RegexHelper">
            <summary>
            操作正则表达式的公共类
            </summary>    
        </member>
        <member name="M:FOX.COMMON.RegexHelper.IsMatch(System.String,System.String)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入字符串</param>
            <param name="pattern">模式字符串</param>        
        </member>
        <member name="M:FOX.COMMON.RegexHelper.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            验证输入字符串是否与模式字符串匹配，匹配返回true
            </summary>
            <param name="input">输入的字符串</param>
            <param name="pattern">模式字符串</param>
            <param name="options">筛选条件</param>
        </member>
        <member name="T:FOX.COMMON_Xofly.MailAttachments">
            <summary>
            添加附件
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.MailAttachments.Add(System.String[])">
            <summary>
            添加邮件附件
            </summary>
            <param name="FilePath">附件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.MailAttachments.Add(System.String)">
            <summary>
            添加一个附件,当指定的附件不存在时，忽略该附件，不产生异常。
            </summary>
            <param name="filePath">附件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.MailAttachments.Clear">
            <summary>
            清除所有附件
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailAttachments.Count">
            <summary>
            获取附件个数
            </summary>
        </member>
        <member name="T:FOX.COMMON_Xofly.MailMessage">
            <summary>
            邮件信息
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.MailMessage.AddRecipients(System.String)">
            <summary>
            增加一个收件人地址
            </summary>
            <param name="recipient">收件人的Email地址</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.MailMessage.AddRecipients(System.String[])">
            <summary>
            增加多个收件人地址
            </summary>
            <param name="recipient">收件人的Email地址集合</param>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Charset">
            <summary>
            设定语言代码，默认设定为GB2312，如不需要可设置为""
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.MaxRecipientNum">
            <summary>
            最大收件人
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.From">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.FromName">
            <summary>
            发件人姓名
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Body">
            <summary>
            内容
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Subject">
            <summary>
            主题
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Attachments">
            <summary>
            附件
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Priority">
            <summary>
            优先权
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.Recipients">
            <summary>
            收件人
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.MailMessage.BodyFormat">
            <summary>
            邮件格式
            </summary>
        </member>
        <member name="T:FOX.COMMON_Xofly.SmtpServerHelper">
            <summary>
            邮件操作
            </summary>
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.CRLF">
            <summary>
            回车换行
            </summary>
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.errmsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.tcpClient">
            <summary>
            TcpClient对象，用于连接服务器
            </summary> 
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.networkStream">
            <summary>
            NetworkStream对象
            </summary> 
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.logs">
            <summary>
            服务器交互记录
            </summary>
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.ErrCodeHT">
            <summary>
            SMTP错误代码哈希表
            </summary>
        </member>
        <member name="F:FOX.COMMON_Xofly.SmtpServerHelper.RightCodeHT">
            <summary>
            SMTP正确代码哈希表
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.Base64Encode(System.String)">
            <summary>
            将字符串编码为Base64字符串
            </summary>
            <param name="str">要编码的字符串</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.Base64Decode(System.String)">
            <summary>
            将Base64字符串解码为普通字符串
            </summary>
            <param name="str">要解码的字符串</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.GetStream(System.String)">
            <summary>
            得到上传附件的文件流
            </summary>
            <param name="FilePath">附件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.SMTPCodeAdd">
            <summary>
            SMTP回应代码哈希表
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.SendCommand(System.String)">
            <summary>
            发送SMTP命令
            </summary> 
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.RecvResponse">
            <summary>
            接收SMTP服务器回应
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.Dialog(System.String,System.String)">
            <summary>
            与服务器交互，发送一条命令并接收回应。
            </summary>
            <param name="str">一个要发送的命令</param>
            <param name="errstr">如果错误，要反馈的信息</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.Dialog(System.String[],System.String)">
            <summary>
            与服务器交互，发送一组命令并接收回应。
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.Connect(System.String,System.Int32)">
            <summary>
            连接服务器
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.GetPriorityString(FOX.COMMON_Xofly.MailPriority)">
            <summary>
            获取优先级
            </summary>
            <param name="mailPriority">优先级</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,System.Boolean,System.String,System.String,FOX.COMMON_Xofly.MailMessage)">
            <summary>
            发送电子邮件
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="username">发信人邮箱地址</param>
            <param name="password">发信人邮箱密码</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,FOX.COMMON_Xofly.MailMessage)">
            <summary>
            发送电子邮件,SMTP服务器不需要身份验证
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpServerHelper.SendEmail(System.String,System.Int32,System.String,System.String,FOX.COMMON_Xofly.MailMessage)">
            <summary>
            发送电子邮件,SMTP服务器需要身份验证
            </summary>
            <param name="smtpServer">发信SMTP服务器</param>
            <param name="port">端口，默认为25</param>
            <param name="username">发信人邮箱地址</param>
            <param name="password">发信人邮箱密码</param>
            <param name="mailMessage">邮件内容</param>
        </member>
        <member name="P:FOX.COMMON_Xofly.SmtpServerHelper.ErrMsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="T:FOX.COMMON_Xofly.SmtpClient">
            <summary>
            发送邮件
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.SmtpClient.ErrMsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="P:FOX.COMMON_Xofly.SmtpClient.SmtpServer">
            <summary>
            邮件服务器
            </summary>
        </member>
        <member name="T:FOX.COMMON_Xofly.SmtpMail">
            <summary>
            操作服务器上邮件
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.SendDataToServer(System.String)">
            <summary>
            向服务器发送信息
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.ReadDataFromServer">
            <summary>
            从网络流中读取服务器回送的信息
            </summary>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.ReceiveMail(System.String,System.String)">
            <summary>
            获取邮件信息
            </summary>
            <param name="uid">邮箱账号</param>
            <param name="pwd">邮箱密码</param>
            <returns>邮件信息</returns>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.ReadEmail(System.String)">
            <summary>
            读取邮件内容
            </summary>
            <param name="mailMessage">第几封</param>
            <returns>内容</returns>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.DeleteEmail(System.String)">
            <summary>
            删除邮件
            </summary>
            <param name="str">第几封</param>
            <returns>操作信息</returns>
        </member>
        <member name="M:FOX.COMMON_Xofly.SmtpMail.CloseConnection">
            <summary>
            关闭服务器连接
            </summary>
        </member>
        <member name="T:FOX.COMMON.NoopCommand">
            <summary>
            This class represents the Pop3 NOOP command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.NoopCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.NoopCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:FOX.COMMON.NoopCommand.CreateRequestMessage">
            <summary>
            Creates the NOOP request message.
            </summary>
            <returns>
            The byte[] containing the NOOP request message.
            </returns>
        </member>
        <member name="T:FOX.COMMON.ImageDown">
            <summary>
            图片下载
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageDown.GetImgTag(System.String)">
            <summary>
            获取图片标志
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageDown.GetImgUrl(System.String)">
            <summary>
            获取图片URL地址
            </summary>
        </member>
        <member name="M:FOX.COMMON.ImageDown.SaveUrlPics(System.String,System.String)">
            <summary>
            下载图片到本地
            </summary>
            <param name="strHTML">HTML</param>
            <param name="path">路径</param>
            <param name="nowyymm">年月</param>
            <param name="nowdd">日</param>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.GetCache(System.String)">
            <summary>
            获取数据缓存
            </summary>
            <param name="CacheKey">键</param>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.SetCache(System.String,System.Object)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.SetCache(System.String,System.Object,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.SetCache(System.String,System.Object,System.DateTime,System.TimeSpan)">
            <summary>
            设置数据缓存
            </summary>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.RemoveAllCache(System.String)">
            <summary>
            移除指定数据缓存
            </summary>
        </member>
        <member name="M:FOX.COMMON.CacheHelper.RemoveAllCache">
            <summary>
            移除全部缓存
            </summary>
        </member>
        <member name="T:FOX.COMMON.NetHelper">
            <summary>
            网络操作相关的类
            </summary>    
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:FOX.COMMON.NetHelper.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:FOX.COMMON.NetHelper.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:FOX.COMMON.NetHelper.SendEmail(System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="receiveEmail">接收电子邮件的地址</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
        </member>
        <member name="P:FOX.COMMON.NetHelper.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:FOX.COMMON.NetHelper.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:FOX.COMMON.NetHelper.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="T:FOX.COMMON.QuotedPrintableEncoding">
            <summary>
            This class is based on the QuotedPrintable class written by Bill Gearhart
            found at http://www.aspemporium.com/classes.aspx?cid=6
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileOperate.GetPostfixStr(System.String)">
            <summary>
            取后缀名
            </summary>
            <param name="filename">文件名</param>
            <returns>.gif|.html格式</returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.WriteFile(System.String,System.String)">
            <summary>
            写文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="Strings">文件内容</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.ReadFile(System.String)">
            <summary>
            读文件
            </summary>
            <param name="Path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FileAdd(System.String,System.String)">
            <summary>
            追加文件
            </summary>
            <param name="Path">文件路径</param>
            <param name="strings">内容</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FileCoppy(System.String,System.String)">
            <summary>
            拷贝文件
            </summary>
            <param name="OrignFile">原始文件</param>
            <param name="NewFile">新文件路径</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FileDel(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="Path">路径</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FileMove(System.String,System.String)">
            <summary>
            移动文件
            </summary>
            <param name="OrignFile">原始路径</param>
            <param name="NewFile">新路径</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FolderCreate(System.String,System.String)">
            <summary>
            在当前目录下创建目录
            </summary>
            <param name="OrignFolder">当前目录</param>
            <param name="NewFloder">新目录</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.FolderCreate(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="Path"></param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.DeleteFolder(System.String)">
            <summary>
            递归删除文件夹目录及文件
            </summary>
            <param name="dir"></param>  
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.CopyDir(System.String,System.String)">
            <summary>
            指定文件夹下面的所有内容copy到目标文件夹下面
            </summary>
            <param name="srcPath">原始路径</param>
            <param name="aimPath">目标文件夹</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.GetFoldAll(System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件
            </summary>
            <param name="Path">详细路径</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.GetFoldAll(System.String,System.String,System.String)">
             <summary>
             获取指定文件夹下所有子目录及文件(下拉框形)
             </summary>
             <param name="Path">详细路径</param>
            <param name="DropName">下拉列表名称</param>
            <param name="tplPath">默认选择模板名称</param>
        </member>
        <member name="M:FOX.COMMON.FileOperate.ListTreeShow(System.IO.DirectoryInfo,System.Int32,System.String,System.String)">
            <summary>
            获取指定文件夹下所有子目录及文件函数
            </summary>
            <param name="theDir">指定目录</param>
            <param name="nLevel">默认起始值,调用时,一般为0</param>
            <param name="Rn">用于迭加的传入值,一般为空</param>
            <param name="tplPath">默认选择模板名称</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.GetDirectoryLength(System.String)">
            <summary>
            获取文件夹大小
            </summary>
            <param name="dirPath">文件夹路径</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FileOperate.GetFileAttibe(System.String)">
            <summary>
            获取指定文件详细属性
            </summary>
            <param name="filePath">文件详细路径</param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.DirFile">
            <summary>
            文件操作夹
            </summary>
        </member>
        <member name="M:FOX.COMMON.DirFile.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DirFile.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.Contains(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.Contains(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param> 
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CreateDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="dir">要创建的目录路径包括目录名</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.DeleteDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="dir">要删除的目录路径和名称</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.DeleteFile(System.String)">
            <summary>
            删除文件
            </summary>
            <param name="file">要删除的文件路径和名称</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CreateFile(System.String,System.String)">
            <summary>
            创建文件
            </summary>
            <param name="dir">带后缀的文件名</param>
            <param name="pagestr">文件内容</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.MoveFile(System.String,System.String)">
            <summary>
            移动文件(剪贴--粘贴)
            </summary>
            <param name="dir1">要移动的文件的路径及全名(包括后缀)</param>
            <param name="dir2">文件移动到新的位置,并指定新的文件名</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CopyFile(System.String,System.String)">
            <summary>
            复制文件
            </summary>
            <param name="dir1">要复制的文件的路径已经全名(包括后缀)</param>
            <param name="dir2">目标位置,并指定新的文件名</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.GetDateDir">
            <summary>
            根据时间得到目录名yyyyMMdd
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DirFile.GetDateFile">
            <summary>
            根据时间得到文件名HHmmssff
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.DirFile.CopyFolder(System.String,System.String)">
            <summary>
            复制文件夹(递归)
            </summary>
            <param name="varFromDirectory">源文件夹路径</param>
            <param name="varToDirectory">目标文件夹路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.ExistsFile(System.String)">
            <summary>
            检查文件,如果文件不存在则创建  
            </summary>
            <param name="FilePath">路径,包括文件名</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.DeleteFolderFiles(System.String,System.String)">
            <summary>
            删除指定文件夹对应其他文件夹里的文件
            </summary>
            <param name="varFromDirectory">指定文件夹路径</param>
            <param name="varToDirectory">对应其他文件夹路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.CopyFiles(System.String,System.String)">
            <summary>
            复制文件参考方法,页面中引用
            </summary>
            <param name="cDir">新路径</param>
            <param name="TempId">模板引擎替换编号</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.WriteText(System.String,System.String,System.Text.Encoding)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="text">写入的内容</param>
            <param name="encoding">编码</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>        
        </member>
        <member name="M:FOX.COMMON.DirFile.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:FOX.COMMON.DirFile.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="T:FOX.COMMON.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>    
        </member>
        <member name="M:FOX.COMMON.ConvertHelper.RepairZero(System.String,System.Int32)">
            <summary>
            指定字符串的固定长度，如果字符串小于固定长度，
            则在字符串的前面补足零，可设置的固定长度最大为9位
            </summary>
            <param name="text">原始字符串</param>
            <param name="limitedLength">字符串的固定长度</param>
        </member>
        <member name="M:FOX.COMMON.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:FOX.COMMON.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:FOX.COMMON.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:FOX.COMMON.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="T:FOX.COMMON.ResourceManagerWrapper">
            <summary>
            ResourceManagerWrapper
            资源管理器
            
            修改纪录
            	2007.05.16 版本：1.0 JiRiGaLa	重新调整代码的规范化。
            
            版本：1.0
            
            <author>
            	<name>JiRiGaLa</name>
            	<date>2007.05.16</date>
            </author> 
            </summary>
        </member>
        <member name="T:FOX.COMMON.ValidateImg">
            <summary>
            验证码 继承 System.Web.UI.Page ，Session["xk_validate_code"]
            </summary>
        </member>
        <member name="M:FOX.COMMON.ValidateImg.CreateImage(System.String)">
            <summary>
            创建图片
            </summary>
            <param name="checkCode"></param>
        </member>
        <member name="T:FOX.COMMON.Tools">
            <summary>
            共用工具类
            </summary>
        </member>
        <member name="M:FOX.COMMON.Tools.GetUserIp">
            <summary>
            获得用户IP
            </summary>
        </member>
        <member name="M:FOX.COMMON.Tools.GetMD5(System.String)">
            <summary>
            根据配置对指定字符串进行 MD5 加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Tools.StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString">参数字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Tools.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串
            </summary>
            <param name="inputString">要处理的字符串</param>
            <param name="len">指定长度</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:FOX.COMMON.Tools.DateDiff(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:FOX.COMMON.Tools.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:FOX.COMMON.Tools.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:FOX.COMMON.Tools.HtmlToTxt(System.String)">
            <summary>
            HTML转行成TEXT
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Tools.IsNullOrEmpty``1(``0)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <typeparam name="T">要验证的对象的类型</typeparam>
            <param name="data">要验证的对象</param>        
        </member>
        <member name="M:FOX.COMMON.Tools.IsNullOrEmpty(System.Object)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <param name="data">要验证的对象</param>
        </member>
        <member name="M:FOX.COMMON.Tools.IsIP(System.String)">
            <summary>
            验证IP地址是否合法
            </summary>
            <param name="ip">要验证的IP地址</param>        
        </member>
        <member name="M:FOX.COMMON.Tools.IsEmail(System.String)">
            <summary>
            验证EMail是否合法
            </summary>
            <param name="email">要验证的Email</param>
        </member>
        <member name="M:FOX.COMMON.Tools.IsInt(System.String)">
            <summary>
            验证是否为整数 如果为空，认为验证不合格 返回false
            </summary>
            <param name="number">要验证的整数</param>        
        </member>
        <member name="M:FOX.COMMON.Tools.IsNumber(System.String)">
            <summary>
            验证是否为数字
            </summary>
            <param name="number">要验证的数字</param>        
        </member>
        <member name="M:FOX.COMMON.Tools.IsDate(System.String@)">
            <summary>
            验证日期是否合法,对不规则的作了简单处理
            </summary>
            <param name="date">日期</param>
        </member>
        <member name="M:FOX.COMMON.Tools.IsIdCard(System.String)">
            <summary>
            验证身份证是否合法
            </summary>
            <param name="idCard">要验证的身份证</param>        
        </member>
        <member name="M:FOX.COMMON.Tools.IsValidInput(System.String@)">
            <summary>
            检测客户输入的字符串是否有效,并将原始字符串修改为有效字符串或空字符串。
            当检测到客户的输入中有攻击性危险字符串,则返回false,有效返回true。
            </summary>
            <param name="input">要检测的字符串</param>
        </member>
        <member name="T:FOX.COMMON.BaseRandom">
            <summary>
            BaseRandom
            产生随机数
            
            随机数管理，最大值、最小值可以自己进行设定。
            </summary>
        </member>
        <member name="M:FOX.COMMON.BaseRandom.GetRandomString">
            <summary>
            产生随机字符
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:FOX.COMMON.BaseRandom.GetRandom">
            <summary>
            产生随机数
            </summary>
            <returns>随机数</returns>
        </member>
        <member name="M:FOX.COMMON.BaseRandom.GetRandom(System.Int32,System.Int32)">
            <summary>
            产生随机数
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximal">最大值</param>
            <returns>随机数</returns>
        </member>
        <member name="T:FOX.COMMON.MimeEntity">
            <summary>
            This class represents a Mime entity.
            这个类表示一个MIME实体
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MimeEntity"/> class.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.#ctor(FOX.COMMON.MimeEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MimeEntity"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.SetContentType(System.Net.Mime.ContentType)">
            <summary>
            Sets the type of the content.
            </summary>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.ToMailMessageEx">
            <summary>
            Toes the mail message ex.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.ToMailMessageEx(FOX.COMMON.MimeEntity)">
            <summary>
            Toes the mail message ex.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.BuildSinglePartMessage(FOX.COMMON.MimeEntity,FOX.COMMON.MailMessageEx)">
            <summary>
            Builds the single part message.
            </summary>
            <param name="entity">The entity.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.GetEncoding">
            <summary>
            Gets the body encoding.
            </summary>
            <param name="contentType">Type of the content.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.BuildMultiPartMessage(FOX.COMMON.MimeEntity,FOX.COMMON.MailMessageEx)">
            <summary>
            Builds the multi part message.
            </summary>
            <param name="entity">The entity.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.SetMessageBody(FOX.COMMON.MailMessageEx,FOX.COMMON.MimeEntity)">
            <summary>
            Sets the message body.
            </summary>
            <param name="message">The message.</param>
            <param name="child">The child.</param>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.DecodeBytes(System.Byte[],System.Text.Encoding)">
            <summary>
            Decodes the bytes.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.CreateAlternateView(FOX.COMMON.MimeEntity)">
            <summary>
            Creates the alternate view.
            </summary>
            <param name="view">The view.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.TrimBrackets(System.String)">
            <summary>
            Trims the brackets.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeEntity.CreateAttachment(FOX.COMMON.MimeEntity)">
            <summary>
            Creates the attachment.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.EncodedMessage">
            <summary>
            Gets the encoded message.
            获取编码的消息。
            </summary>
            <value>
            编码的消息
            The encoded message.
            </value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.Children">
            <summary>
            Gets the children.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.MediaSubType">
            <summary>
            Gets the type of the media sub.
            </summary>
            <value>The type of the media sub.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.MediaMainType">
            <summary>
            Gets the type of the media main.
            </summary>
            <value>The type of the media main.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.Headers">
            <summary>
            Gets the headers.
            </summary>
            <value>The headers.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.MimeVersion">
            <summary>
            Gets or sets the MIME version.
            </summary>
            <value>The MIME version.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.ContentDescription">
            <summary>
            Gets or sets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.ContentDisposition">
            <summary>
            Gets or sets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.TransferEncoding">
            <summary>
            Gets or sets the transfer encoding.
            </summary>
            <value>The transfer encoding.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.ContentTransferEncoding">
            <summary>
            Gets or sets the content transfer encoding.
            </summary>
            <value>The content transfer encoding.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.HasBoundary">
            <summary>
            Gets a value indicating whether this instance has boundary.
            </summary>
            <value>
            	<c>true</c> if this instance has boundary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.StartBoundary">
            <summary>
            Gets the start boundary.
            </summary>
            <value>The start boundary.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.EndBoundary">
            <summary>
            Gets the end boundary.
            </summary>
            <value>The end boundary.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:FOX.COMMON.MimeEntity.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:FOX.COMMON.Stat">
            <summary>
            This class represents the results from the execution 
            of a pop3 STAT command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Stat.#ctor(System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Stat"/> class.
            </summary>
            <param name="messageCount">The message count.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="P:FOX.COMMON.Stat.MessageCount">
            <summary>
            Gets or sets the message count.
            </summary>
            <value>The message count.</value>
        </member>
        <member name="P:FOX.COMMON.Stat.Octets">
            <summary>
            Gets or sets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="T:FOX.COMMON.JsHelper">
            <summary>
            客户端脚本输出
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.AlertAndRedirect(System.String,System.String)">
            <summary>
            弹出信息,并跳转指定页面。
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.AlertAndGoHistory(System.String,System.Int32)">
            <summary>
            弹出信息,并返回历史页面
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.Redirect(System.String)">
            <summary>
            直接跳转到指定的页面
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.AlertAndParentUrl(System.String,System.String)">
            <summary>
            弹出信息 并指定到父窗口
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.ParentRedirect(System.String)">
            <summary>
            返回到父窗口
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.BackHistory(System.Int32)">
            <summary>
            返回历史页面
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.Alert(System.String)">
            <summary>
            弹出信息
            </summary>
        </member>
        <member name="M:FOX.COMMON.JsHelper.RegisterScriptBlock(System.Web.UI.Page,System.String)">
            <summary>
            注册脚本块
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>  
            连接FTP服务器
            </summary>  
            <param name="FtpServerIP">FTP连接地址</param>  
            <param name="FtpRemotePath">指定FTP连接成功后的当前目录, 如果不指定即默认为根目录</param>  
            <param name="FtpUserID">用户名</param>  
            <param name="FtpPassword">密码</param>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.Upload(System.String)">
            <summary>  
            上传  
            </summary>   
        </member>
        <member name="M:FOX.COMMON.FTPHelper.Download(System.String,System.String)">
            <summary>  
            下载  
            </summary>   
        </member>
        <member name="M:FOX.COMMON.FTPHelper.Delete(System.String)">
            <summary>  
            删除文件  
            </summary>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.GetFilesDetailList">
            <summary>  
            获取当前目录下明细(包含文件和文件夹)  
            </summary>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.GetAllList(System.String)">
            <summary>  
            获取FTP文件列表(包括文件夹)
            </summary>   
        </member>
        <member name="M:FOX.COMMON.FTPHelper.GetFileList(System.String)">
            <summary>  
            获取当前目录下文件列表(不包括文件夹)  
            </summary>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.FileExist(System.String)">
            <summary>  
            判断当前目录下指定的文件是否存在  
            </summary>  
            <param name="RemoteFileName">远程文件名</param>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.MakeDir(System.String)">
            <summary>  
            创建文件夹  
            </summary>   
        </member>
        <member name="M:FOX.COMMON.FTPHelper.GetFileSize(System.String)">
            <summary>  
            获取指定文件大小  
            </summary>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.ReName(System.String,System.String)">
            <summary>  
            更改文件名  
            </summary> 
        </member>
        <member name="M:FOX.COMMON.FTPHelper.MovieFile(System.String,System.String)">
            <summary>  
            移动文件  
            </summary>  
        </member>
        <member name="M:FOX.COMMON.FTPHelper.GotoDirectory(System.String,System.Boolean)">
            <summary>  
            切换当前目录  
            </summary>  
            <param name="IsRoot">true:绝对路径 false:相对路径</param>   
        </member>
        <member name="T:FOX.COMMON.DataToExcel">
            <summary>
            操作EXCEL导出数据报表的类
            </summary>
        </member>
        <member name="M:FOX.COMMON.DataToExcel.CreateExcel">
            <summary>
            创建一个Excel示例
            </summary>
        </member>
        <member name="M:FOX.COMMON.DataToExcel.KillExcelProcess">
            <summary>
            结束Excel进程
            </summary>
        </member>
        <member name="M:FOX.COMMON.DataToExcel.ClearFile(System.String)">
            <summary>
            将DataTable的数据导出显示为报表(不使用Excel对象)
            </summary>
            <param name="dt">数据DataTable</param>
            <param name="strTitle">标题</param>
            <param name="FilePath">生成文件的路径</param>
            <param name="nameList"></param>
            <returns></returns>
        </member>
        <member name="P:FOX.COMMON.DataToExcel.TitleColorIndex">
            <summary>
            标题背景色
            </summary>
        </member>
        <member name="M:FOX.COMMON.CookieHelper.ClearCookie(System.String)">
            <summary>
            清除指定Cookie
            </summary>
            <param name="cookiename">cookiename</param>
        </member>
        <member name="M:FOX.COMMON.CookieHelper.GetCookieValue(System.String)">
            <summary>
            获取指定Cookie值
            </summary>
            <param name="cookiename">cookiename</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            添加一个Cookie（24小时过期）
            </summary>
            <param name="cookiename"></param>
            <param name="cookievalue"></param>
        </member>
        <member name="M:FOX.COMMON.CookieHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            添加一个Cookie
            </summary>
            <param name="cookiename">cookie名</param>
            <param name="cookievalue">cookie值</param>
            <param name="expires">过期时间 DateTime</param>
        </member>
        <member name="T:FOX.COMMON.UserCommand">
            <summary>
            This command represents a Pop3 USER command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.UserCommand.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.UserCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:FOX.COMMON.UserCommand.CreateRequestMessage">
            <summary>
            Creates the USER request message.
            </summary>
            <returns>
            The byte[] containing the USER request message.
            </returns>
        </member>
        <member name="T:FOX.COMMON.QuitCommand">
            <summary>
            This class represents the Pop3 QUIT command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.QuitCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.QuitCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:FOX.COMMON.QuitCommand.CreateRequestMessage">
            <summary>
            Creates the Quit request message.
            </summary>
            <returns>
            The byte[] containing the QUIT request message.
            </returns>
        </member>
        <member name="T:FOX.COMMON.MailMessageEx">
            <summary>
            This class adds a few internet mail headers not already exposed by the 
            System.Net.MailMessage.  It also provides support to encapsulate the
            nested mail attachments in the Children collection.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MailMessageEx"/> class.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.GetHeader(System.String)">
            <summary>
            Gets the header.
            </summary>
            <param name="header">The header.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.CreateMailMessageFromEntity(FOX.COMMON.MimeEntity)">
            <summary>
            Creates the mail message from entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.CreateMailAddress(System.String)">
            <summary>
            Creates the mail address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.PopulateAddressList(System.String,System.Net.Mail.MailAddressCollection)">
            <summary>
            Populates the address list.
            </summary>
            <param name="addressList">The address list.</param>
            <param name="recipients">The recipients.</param>
        </member>
        <member name="M:FOX.COMMON.MailMessageEx.GetMailAddresses(System.String)">
            <summary>
            Gets the mail addresses.
            </summary>
            <param name="addressList">The address list.</param>
            <returns></returns>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.MessageNumber">
            <summary>
            Gets or sets the message number of the MailMessage on the POP3 server.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.Children">
            <summary>
            Gets the children MailMessage attachments.
            </summary>
            <value>The children MailMessage attachments.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.DeliveryDate">
            <summary>
            Gets the delivery date.
            </summary>
            <value>The delivery date.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.ReturnAddress">
            <summary>
            Gets the return address.
            </summary>
            <value>The return address.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.Routing">
            <summary>
            Gets the routing.
            </summary>
            <value>The routing.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.MessageId">
            <summary>
            Gets the message id.
            </summary>
            <value>The message id.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.MimeVersion">
            <summary>
            Gets the MIME version.
            </summary>
            <value>The MIME version.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.ContentId">
            <summary>
            Gets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.ContentDescription">
            <summary>
            Gets the content description.
            </summary>
            <value>The content description.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.ContentDisposition">
            <summary>
            Gets the content disposition.
            </summary>
            <value>The content disposition.</value>
        </member>
        <member name="P:FOX.COMMON.MailMessageEx.ContentType">
            <summary>
            Gets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="T:FOX.COMMON.SysHelper">
            <summary>
            系统操作相关的公共类
            </summary>    
        </member>
        <member name="M:FOX.COMMON.SysHelper.GetPath(System.String)">
            <summary>
            获取文件相对路径映射的物理路径
            </summary>
            <param name="virtualPath">文件的相对路径</param>        
        </member>
        <member name="M:FOX.COMMON.SysHelper.GetMethodName(System.Int32)">
            <summary>
            获取指定调用层级的方法名
            </summary>
            <param name="level">调用的层数</param>        
        </member>
        <member name="P:FOX.COMMON.SysHelper.NewGUID">
            <summary>
            获取GUID值
            </summary>
        </member>
        <member name="P:FOX.COMMON.SysHelper.NewLine">
            <summary>
            获取换行字符
            </summary>
        </member>
        <member name="P:FOX.COMMON.SysHelper.CurrentAppDomain">
            <summary>
            获取当前应用程序域
            </summary>
        </member>
        <member name="M:FOX.COMMON.SharpZip.PackFiles(System.String,System.String)">
            <summary>
            压缩
            </summary> 
            <param name="filename"> 压缩后的文件名(包含物理路径)</param>
            <param name="directory">待压缩的文件夹(包含物理路径)</param>
        </member>
        <member name="M:FOX.COMMON.SharpZip.UnpackFiles(System.String,System.String)">
            <summary>
            解压缩
            </summary>
            <param name="file">待解压文件名(包含物理路径)</param>
            <param name="dir"> 解压到哪个目录中(包含物理路径)</param>
        </member>
        <member name="M:FOX.COMMON.ClassZip.ZipFileDictory(System.String,ICSharpCode.SharpZipLib.Zip.ZipOutputStream,System.String)">
            <summary>
            递归压缩文件夹方法
            </summary>
        </member>
        <member name="M:FOX.COMMON.ClassZip.ZipFileDictory(System.String,System.String,System.Int32)">
            <summary>
            压缩目录
            </summary>
            <param name="FolderToZip">待压缩的文件夹，全路径格式</param>
            <param name="ZipedFile">压缩后的文件名，全路径格式</param>
        </member>
        <member name="M:FOX.COMMON.ClassZip.ZipFile(System.String,System.String,System.Int32)">
            <summary>
            压缩文件
            </summary>
            <param name="FileToZip">要进行压缩的文件名</param>
            <param name="ZipedFile">压缩后生成的压缩文件名</param>
        </member>
        <member name="M:FOX.COMMON.ClassZip.Zip(System.String,System.String,System.Int32)">
            <summary>
            压缩
            </summary>
            <param name="FileToZip">待压缩的文件目录</param>
            <param name="ZipedFile">生成的目标文件</param>
            <param name="level">6</param>
        </member>
        <member name="M:FOX.COMMON.ClassZip.UnZip(System.String,System.String)">
            <summary>
            解压
            </summary>
            <param name="FileToUpZip">待解压的文件</param>
            <param name="ZipedFolder">解压目标存放目录</param>
        </member>
        <member name="M:FOX.COMMON.ZipHelper.EnZip(System.String,System.String,System.String)">
            <summary>
            压缩
            </summary>
            <param name="zipname">要解压的文件名</param>
            <param name="zippath">要压缩的文件目录</param>
            <param name="dirpath">初始目录</param>
        </member>
        <member name="M:FOX.COMMON.ZipHelper.DeZip(System.String,System.String)">
            <summary>
            解压缩
            </summary>
            <param name="zipname">要解压的文件名</param>
            <param name="zippath">要解压的文件路径</param>
        </member>
        <member name="T:FOX.COMMON.MediaHandler">
            <summary>
            处理多媒体的公共类
            </summary>
        </member>
        <member name="M:FOX.COMMON.MediaHandler.SyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:FOX.COMMON.MediaHandler.SyncPlayWAV(System.String)">
            <summary>
            以同步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:FOX.COMMON.MediaHandler.ASyncPlayWAV(System.Media.SoundPlayer,System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="sp">SoundPlayer对象</param>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:FOX.COMMON.MediaHandler.ASyncPlayWAV(System.String)">
            <summary>
            以异步方式播放wav文件
            </summary>
            <param name="wavFilePath">wav文件的路径</param>
        </member>
        <member name="M:FOX.COMMON.MediaHandler.StopWAV(System.Media.SoundPlayer)">
            <summary>
            
            </summary>
            <param name="sp">SoundPlayer对象</param>
        </member>
        <member name="T:FOX.COMMON.Pop3Client">
            <summary>
            The Pop3Client class provides a wrapper for the Pop3 commands
            that can be executed against a Pop3Server.  This class will 
            execute and return results for the various commands that are 
            executed.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Client"/> class using the default POP3 port 110
            without using SSL.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.#ctor(System.String,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Client"/> class using the default POP3 port 110.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.#ctor(System.String,System.Int32,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Client"/> class.
            </summary>
            <param name="hostname">The hostname.</param>
            <param name="port">The port.</param>
            <param name="useSsl">if set to <c>true</c> [use SSL].</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Client"/> class.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.EnsureConnection">
            <summary>
            Checks the connection.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.SetState(FOX.COMMON.Pop3State)">
            <summary>
            Resets the state.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.EnsureResponse(FOX.COMMON.Pop3Response,System.String)">
            <summary>
            Ensures the response.
            </summary>
            <param name="response">The response.</param>
            <param name="error">The error.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.EnsureResponse(FOX.COMMON.Pop3Response)">
            <summary>
            Ensures the response.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.TraceCommand``2(``0)">
            <summary>
            Traces the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Connect">
            <summary>
            Connects this instance and properly sets the 
            client stream to Use Ssl if it is specified.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.SetClientStream(System.IO.Stream)">
            <summary>
            Sets the client stream.  If UseSsl <c>true</c> then wrap 
            the client's <c>NetworkStream</c> in an <c>SslStream</c>, if UseSsl <c>false</c> 
            then set the client stream to the <c>NetworkStream</c>
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Authenticate">
            <summary>
            Authenticates this instance.
            </summary>
            <remarks>A successful execution of this method will result in a Current State of Transaction.
            Unsuccessful USER or PASS commands can be reattempted by resetting the Username or Password 
            properties and re-execution of the methods.</remarks>
            <exception cref="T:FOX.COMMON.Pop3Exception">
            If the Pop3Server is unable to be connected.
            If the User command is unable to be successfully executed.
            If the Pass command is unable to be successfully executed.
            </exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Dele(FOX.COMMON.Pop3ListItem)">
            <summary>
            Executes the POP3 DELE command.
            </summary>
            <param name="item">The item.</param>
            /// <exception cref="T:FOX.COMMON.Pop3Exception">If the DELE command was unable to be executed successfully.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Noop">
            <summary>
            Executes the POP3 NOOP command.
            </summary>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the NOOP command was unable to be executed successfully.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Rset">
            <summary>
            Executes the POP3 RSET command.
            </summary>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the RSET command was unable to be executed successfully.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Stat">
            <summary>
            Executes the POP3 STAT command.
            </summary>
            <returns>A Stat object containing the results of STAT command.</returns>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the STAT command was unable to be executed successfully.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.List">
            <summary>
            Executes the POP3 List command.
            </summary>
            <returns>A generic List of Pop3Items containing the results of the LIST command.</returns>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the LIST command was unable to be executed successfully.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.List(System.Int32)">
            <summary>
            Lists the specified message.
            </summary>
            <param name="message">The message.</param>
            <returns>A <c>Pop3ListItem</c> for the requested Pop3Item.</returns>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the LIST command was unable to be executed successfully for the provided message id.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.RetrMimeEntity(FOX.COMMON.Pop3ListItem)">
            <summary>
            Retrs the specified message.
            </summary>
            <param name="item">The item.</param>
            <returns>A MimeEntity for the requested Pop3 Mail Item.</returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.RetrMailMessageEx(FOX.COMMON.Pop3ListItem)">
            <summary>
            Retrs the mail message ex.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Quit">
            <summary>
            Executes the Pop3 QUIT command.
            </summary>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the quit command returns a -ERR server message.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.ExecuteCommand``2(``1)">
            <summary>
            Provides a common way to execute all commands.  This method
            validates the connection, traces the command and finally
            validates the response message for a -ERR response.
            </summary>
            <param name="command">The command.</param>
            <returns>The Pop3Response for the provided command</returns>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the HostMessage does not start with '+OK'.</exception>
            <exception cref="T:FOX.COMMON.Pop3Exception">If the client is no longer connected.</exception>
        </member>
        <member name="M:FOX.COMMON.Pop3Client.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="E:FOX.COMMON.Pop3Client.Trace">
            <summary>
            Traces the various command objects that executed during this objects
            lifetime.
            </summary>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.Hostname">
            <summary>
            Gets the hostname.
            </summary>
            <value>The hostname.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.Port">
            <summary>
            Gets the port.
            </summary>
            <value>The port.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.UseSsl">
            <summary>
            Gets a value indicating whether [use SSL].
            </summary>
            <value><c>true</c> if [use SSL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3Client.CurrentState">
            <summary>
            Gets the state of the current.
            </summary>
            <value>The state of the current.</value>
        </member>
        <member name="T:FOX.COMMON.ExcelHelper">
            <summary>
            Excel操作类
            </summary>
            Microsoft Excel 11.0 Object Library
        </member>
        <!-- 忽略成員 "M:FOX.COMMON.ExcelHelper.DataTable1Excel(System.Data.DataTable)" 中格式錯誤的 XML 註解 -->
        <member name="M:FOX.COMMON.ExcelHelper.DataTable2Excel(System.Data.DataTable)">
            <summary>
            导出Excel文件，转换为可读模式
            </summary>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.DataTable3Excel(System.Data.DataTable,System.String)">
            <summary>
            导出Excel文件，并自定义文件名
            </summary>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.OutputToExcel(System.Data.DataTable,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.OutputToExcel(System.Data.DataTable,System.Collections.ArrayList,System.String)">
            <summary>
            将数据导出至Excel文件
            </summary>
            <param name="Table">DataTable对象</param>
            <param name="Columns">要导出的数据列集合</param>
            <param name="ExcelFilePath">Excel文件路径</param>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.GetExcelTables(System.String)">
            <summary>
            获取Excel文件数据表列表
            </summary>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.InputFromExcel(System.String,System.String)">
            <summary>
            将Excel文件导出至DataTable(第一行作为表头)
            </summary>
            <param name="ExcelFilePath">Excel文件路径</param>
            <param name="TableName">数据表名，如果数据表名错误，默认为第一个数据表名</param>
        </member>
        <member name="M:FOX.COMMON.ExcelHelper.GetExcelTableColumns(System.String,System.String)">
            <summary>
            获取Excel文件指定数据表的数据列表
            </summary>
            <param name="ExcelFileName">Excel文件名</param>
            <param name="TableName">数据表名</param>
        </member>
        <member name="T:FOX.COMMON.MySecurity">
            <summary>
            MySecurity(安全类) 的摘要说明。
            </summary>
        </member>
        <member name="M:FOX.COMMON.MySecurity.#ctor">
            <summary>
            初始化安全类
            </summary>
        </member>
        <member name="M:FOX.COMMON.MySecurity.SEncryptString(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="inputStr">输入字符串</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.EncryptString(System.String,System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="inputStr">输入字符串</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.SEncryptString(System.String)">
            <summary>
            加密字符串 密钥为系统默认
            </summary>
            <param name="inputStr">输入字符串</param>
            <returns>输出加密后字符串</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.EncryptFile(System.String,System.String,System.String)">
            <summary>
            加密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">加密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>  
        </member>
        <member name="M:FOX.COMMON.MySecurity.SDecryptString(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <param name="keyStr">密钥</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.SDecryptString(System.String)">
            <summary>
             解密字符串 密钥为系统默认
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.DecryptString(System.String,System.String)">
            <summary>
            解密字符串
            </summary>
            <param name="inputStr">要解密的字符串</param>
            <param name="keyStr">密钥</param>
            <returns>解密后的结果</returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.DecryptFile(System.String,System.String,System.String)">
            <summary>
            解密文件
            </summary>
            <param name="filePath">输入文件路径</param>
            <param name="savePath">解密后输出文件路径</param>
            <param name="keyStr">密码，可以为“”</param>
            <returns></returns>    
        </member>
        <member name="M:FOX.COMMON.MySecurity.MD5(System.String)">
            <summary>
            128位MD5算法加密字符串
            </summary>
            <param name="text">要加密的字符串</param>    
        </member>
        <member name="M:FOX.COMMON.MySecurity.MD5(System.Byte[])">
            <summary>
            128位MD5算法加密Byte数组
            </summary>
            <param name="data">要加密的Byte数组</param>    
        </member>
        <member name="M:FOX.COMMON.MySecurity.EncodeBase64(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="text">要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MySecurity.DecodeBase64(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="text">要解密的字符串</param>
        </member>
        <member name="T:FOX.COMMON.UpLoadFiles">
            <summary>
            UpLoadFiles 的摘要说明
            </summary>
        </member>
        <member name="M:FOX.COMMON.UpLoadFiles.UploadFile(System.String,System.Int32,System.String[],System.Web.UI.HtmlControls.HtmlInputFile,System.String@,System.Int32@)">
            <summary>
            上传文件
            </summary>
            <param name="filePath">保存文件地址</param>
            <param name="maxSize">文件最大大小</param>
            <param name="fileType">文件后缀类型</param>
            <param name="TargetFile">控件名</param>
            <param name="saveFileName">保存后的文件名和地址</param>
            <param name="fileSize">文件大小</param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.FileUp">
            <summary>
            文件上传类
            </summary>
        </member>
        <member name="M:FOX.COMMON.FileUp.GetBinaryFile(System.String)">
            <summary>
            转换为字节数组
            </summary>
            <param name="filename">文件名</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:FOX.COMMON.FileUp.ConvertStreamToByteBuffer(System.IO.Stream)">
            <summary>
            流转化为字节数组
            </summary>
            <param name="theStream">流</param>
            <returns>字节数组</returns>
        </member>
        <member name="M:FOX.COMMON.FileUp.FileSc(System.Web.UI.WebControls.FileUpload,System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="PosPhotoUpload">控件</param>
            <param name="saveFileName">保存的文件名</param>
            <param name="imagePath">保存的文件路径</param>
        </member>
        <member name="M:FOX.COMMON.FileUp.SaveFile(System.Byte[],System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="binData">字节数组</param>
            <param name="fileName">文件名</param>
            <param name="fileType">文件类型</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="postData">post 提交的字符串</param>
            <param name="isPost">是否是post</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetStream(System.String,System.Net.CookieContainer)">
            <param name="url">地址</param>
            <param name="cookieContainer">cookieContainer</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.NoHTML(System.String)">
            <summary>   
            清除HTML标记   
            </summary>   
            <param name="NoHTML">包括HTML的源码</param>   
            <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetHref(System.String)">
            <summary>
            获取页面的链接正则
            </summary>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址
            </summary>
            <param name="imgHttp">要补充的http://路径信息</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="ImgString"><img src="" />字符串</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.Get_Http(System.String)">
            <summary>
            以GET方式抓取远程页面内容
            </summary>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.Post_Http(System.String,System.String,System.String)">
            <summary>
            以POST方式抓取远程页面内容
            </summary>
            <param name="postData">参数列表</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.ZipHtml(System.String)">
            <summary>
            压缩HTML输出
            </summary>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.DelHtml(System.String,System.String)">
            <summary>
            过滤指定HTML标签
            </summary>
            <param name="s_TextStr">要过滤的字符</param>
            <param name="html_Str">a img p div</param>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.File(System.String,System.Web.UI.Page)">
            <summary>
            加载文件块
            </summary>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.CSS(System.String,System.Web.UI.Page)">
            <summary>
            加载CSS样式文件
            </summary>
        </member>
        <member name="M:FOX.COMMON.HTMLHelper.JS(System.String,System.Web.UI.Page)">
            <summary>
            加载javascript脚本文件
            </summary>
        </member>
        <member name="P:FOX.COMMON.HTMLHelper.CookieContainer">
            <summary> 
            Cookie
            </summary> 
        </member>
        <member name="P:FOX.COMMON.HTMLHelper.Encoding">
            <summary> 
            语言
            </summary> 
        </member>
        <member name="T:FOX.COMMON.MimeReader">
            <summary>
            This class is responsible for parsing a string array of lines
            containing a MIME message.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MimeReader"/> class.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeReader.#ctor(FOX.COMMON.MimeEntity,System.Collections.Generic.Queue{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MimeReader"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:FOX.COMMON.MimeReader.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.MimeReader"/> class.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:FOX.COMMON.MimeReader.ParseHeaders">
            <summary>
            Parse headers into _entity.Headers NameValueCollection.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeReader.ProcessHeaders">
            <summary>
            Processes mime specific headers.
            </summary>
            <returns>A mime entity with mime specific headers parsed.</returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.CreateMimeEntity">
            <summary>
            Creates the MIME entity.
            </summary>
            <returns>A mime entity containing 0 or more children representing the mime message.</returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.SetDecodedContentStream">
            <summary>
            Sets the decoded content stream by decoding the EncodedMessage 
            and writing it to the entity content stream.
            </summary>
            <param name="entity">The entity containing the encoded message.</param>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetBytes(System.String)">
            <summary>
            Gets a byte[] of content for the provided string.
            </summary>
            <param name="decodedContent">Content.</param>
            <returns>A byte[] containing content.</returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.ParseBody">
            <summary>
            Parses the body.
            </summary>
        </member>
        <member name="M:FOX.COMMON.MimeReader.AddChildEntity(FOX.COMMON.MimeEntity,System.Collections.Generic.Queue{System.String})">
            <summary>
            Adds the child entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetContentType(System.String)">
            <summary>
            Gets the type of the content.
            </summary>
            <param name="contentType">Type of the content.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetMediaType(System.String)">
            <summary>
            Gets the type of the media.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetMediaMainType(System.String)">
            <summary>
            Gets the type of the media main.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetMediaSubType(System.String)">
            <summary>
            Gets the type of the media sub.
            </summary>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MimeReader.GetTransferEncoding(System.String)">
            <summary>
            Gets the transfer encoding.
            </summary>
            <param name="transferEncoding">The transfer encoding.</param>
            <returns></returns>
            <remarks>
            The transfer encoding determination follows the same rules as 
            Peter Huber's article w/ the exception of not throwing exceptions 
            when binary is provided as a transferEncoding.  Instead it is left
            to the calling code to check for binary.
            </remarks>
        </member>
        <member name="P:FOX.COMMON.MimeReader.Lines">
            <summary>
            Gets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="T:FOX.COMMON.MailHelper">
            <summary>
            邮件操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.MailHelper.GetEMailLoginUrl(System.String)">
            <summary>
            获取Email登陆地址
            </summary>
            <param name="email">email地址</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">邮件地址列表</param>
            <param name="HostIP">主机IP</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String)">
            <summary>
            发送邮件（要求登陆）
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct">邮件主题</param>
            <param name="mailBody">邮件正文</param>
            <param name="mailFrom">发送者</param>
            <param name="mailAddress">接收地址列表</param>
            <param name="HostIP">主机IP</param>
            <param name="filename">附件名</param>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <param name="ssl">加密类型</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.MailHelper.sendMail(System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Int32,System.String,System.String,System.Boolean,System.String,System.Boolean@)">
            <summary>
            发送邮件
            </summary>
            <param name="mailSubjct"></param>
            <param name="mailBody"></param>
            <param name="mailFrom"></param>
            <param name="mailAddress"></param>
            <param name="HostIP"></param>
            <param name="port"></param>
            <param name="username"></param>
            <param name="password"></param>
            <param name="ssl"></param>
            <param name="replyTo"></param>
            <param name="sendOK"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PinYin.GetCodstring(System.String)">
            <summary>
            犖趼秞腔忑趼譫
            </summary>
            <param name="UnName">犖趼</param>
            <returns>忑趼譫</returns>
        </member>
        <member name="T:FOX.COMMON.DEncrypt">
            <summary>
            Encrypt 的摘要说明。
            </summary>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Encrypt(System.String)">
            <summary>
            使用缺省密钥字符串加密string
            </summary>
            <param name="original">明文</param>
            <returns>密文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Decrypt(System.String)">
            <summary>
            使用缺省密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <returns>明文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Encrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串加密string
            </summary>
            <param name="original">原始文字</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>密文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Decrypt(System.String,System.String)">
            <summary>
            使用给定密钥字符串解密string
            </summary>
            <param name="original">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Decrypt(System.String,System.String,System.Text.Encoding)">
            <summary>
            使用给定密钥字符串解密string,返回指定编码方式明文
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <param name="encoding">字符编码方案</param>
            <returns>明文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Decrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串解密byte[]
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Encrypt(System.Byte[])">
            <summary>
            使用缺省密钥字符串加密
            </summary>
            <param name="original">原始数据</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.MakeMD5(System.Byte[])">
            <summary>
            生成MD5摘要
            </summary>
            <param name="original">数据源</param>
            <returns>摘要</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Encrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥加密
            </summary>
            <param name="original">明文</param>
            <param name="key">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:FOX.COMMON.DEncrypt.Decrypt(System.Byte[],System.Byte[])">
            <summary>
            使用给定密钥解密数据
            </summary>
            <param name="encrypted">密文</param>
            <param name="key">密钥</param>
            <returns>明文</returns>
        </member>
        <member name="T:FOX.COMMON.JavaScriptPlus">
            <summary>
            JavaScript 操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.ResponseScript(System.Web.UI.Page,System.String)">
            <summary>
            输出自定义脚本信息
            </summary>
            <param name="page">当前页面指针，一般为this</param>
            <param name="script">输出脚本</param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.GoHistory(System.Int32)">
            <summary>
            回到历史页面
            </summary>
            <param name="value">-1/1</param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.CloseWindow">
            <summary>
            关闭当前窗口
            </summary>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.RefreshParent(System.String)">
            <summary>
            刷新父窗口
            </summary>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.RefreshOpener">
            <summary>
            刷新打开窗口
            </summary>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.JavaScriptLocationHref(System.String)">
            <summary>
            转向Url指定的页面
            </summary>
            <param name="url">连接地址</param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.ShowModalDialogWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小位置的模式对话框
            </summary>
            <param name="webFormUrl">连接地址</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <param name="top">距离上位置</param>
            <param name="left">距离左位置</param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.ShowModalDialogWindow(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl">链接地址</param>
            <param name="features"></param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.ShowModalDialogJavascript(System.String,System.String)">
            <summary>
            打开模式对话框
            </summary>
            <param name="webFormUrl"></param>
            <param name="features"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.OpenWebFormSize(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            打开指定大小的新窗体
            </summary>
            <param name="url">地址</param>
            <param name="width">宽</param>
            <param name="heigth">高</param>
            <param name="top">头位置</param>
            <param name="left">左位置</param>
        </member>
        <member name="M:FOX.COMMON.JavaScriptPlus.JavaScriptExitIfream(System.String)">
            <summary>
            页面跳转（跳出框架）
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:FOX.COMMON.Pop3ListItem">
            <summary>
            This class represents an item returned from the 
            Pop3 LIST command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3ListItem.#ctor(System.Int32,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3ListItem"/> class.
            </summary>
            <param name="messageNumber">The message number.</param>
            <param name="octets">The octets.</param>
        </member>
        <member name="P:FOX.COMMON.Pop3ListItem.MessageId">
            <summary>
            Gets or sets the message number.
            </summary>
            <value>The message number.</value>
        </member>
        <member name="P:FOX.COMMON.Pop3ListItem.Octets">
            <summary>
            Gets or sets the octets.
            </summary>
            <value>The octets.</value>
        </member>
        <member name="T:FOX.COMMON.Pop3Commands">
            <summary>
            This class contains a string representation of Pop3 commands
            that can be executed.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.User">
            <summary>
            The USER command followed by a space.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Crlf">
            <summary>
            The CRLF escape sequence.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Quit">
            <summary>
            The QUIT command followed by a CRLF.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Stat">
            <summary>
            The STAT command followed by a CRLF.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.List">
            <summary>
            The LIST command followed by a space.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Retr">
            <summary>
            The RETR command followed by a space.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Noop">
            <summary>
            The NOOP command followed by a CRLF.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Dele">
            <summary>
            The DELE command followed by a space.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Rset">
            <summary>
            The RSET command followed by a CRLF.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Pass">
            <summary>
            The PASS command followed by a space.
            </summary>
        </member>
        <member name="F:FOX.COMMON.Pop3Commands.Top">
            <summary>
            The TOP command followed by a space.
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetList(System.String)">
            <summary>
            得到文件列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetFile(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.AddMSCFile(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            修改文件
            </summary>
            <param name="ftpFolder">本地目录</param>
            <param name="ftpFileName">本地文件名temp</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.DelFile(System.String,System.String)">
            <summary>
            删除文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.PutFile(System.String,System.String)">
            <summary>
            上传文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetFileNoBinary(System.String,System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="ftpFolder">ftp目录</param>
            <param name="ftpFileName">ftp文件名</param>
            <param name="localFolder">本地目录</param>
            <param name="localFileName">本地文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetFileInfo(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.CanConnect">
            <summary>
            测试FTP服务器是否可登陆
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetFileInfoConnected(System.String,System.String)">
            <summary>
            得到FTP上文件信息
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <param name="ftpFileName">ftp文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.GetFileList(System.String,System.String)">
            <summary>
            得到文件列表
            </summary>
            <param name="ftpFolder">FTP目录</param>
            <returns>FTP通配符号</returns>
        </member>
        <member name="M:FOX.COMMON.FTPOperater.getFtpClient">
             <summary>
            得到FTP传输对象
             </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.Ftp">
            <summary>
            全局FTP访问变量
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.Server">
            <summary>
            Ftp服务器
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.User">
            <summary>
            Ftp用户
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.Pass">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.FolderZJ">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPOperater.FolderWX">
            <summary>
            Ftp密码
            </summary>
        </member>
        <member name="T:FOX.COMMON.CNDate">
            <summary>
            农历属性
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnIntYear">
            <summary>
            农历年(整型)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnIntMonth">
            <summary>
            农历月份(整型)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnIntDay">
            <summary>
            农历天(整型)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnStrYear">
            <summary>
            农历年(支干)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnStrMonth">
            <summary>
            农历月份(字符)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnStrDay">
            <summary>
            农历天(字符)
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnAnm">
            <summary>
            农历属象
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnSolarTerm">
            <summary>
            二十四节气
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnFtvl">
            <summary>
            阴历节日
            </summary>
        </member>
        <member name="F:FOX.COMMON.CNDate.cnFtvs">
            <summary>
            阳历节日
            </summary>
        </member>
        <member name="T:FOX.COMMON.ChinaDate">
            <summary>
            公历转农历
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.lYearDays(System.Int32)">
            <summary>
            传回农历y年的总天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.leapDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.leapMonth(System.Int32)">
            <summary>
            传回农历y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.monthDays(System.Int32,System.Int32)">
            <summary>
            传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.AnimalsYear(System.Int32)">
            <summary>
            传回农历y年的生肖
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.cyclicalm(System.Int32)">
            <summary>
            传入月日的offset 传回干支,0=甲子
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.cyclical(System.Int32)">
            <summary>
            传入offset 传回干支, 0=甲子
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.Lunar(System.Int32,System.Int32)">
            <summary>
            传出农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.calElement(System.Int32,System.Int32,System.Int32)">
            <summary>
            传出y年m月d日对应的农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.GetDaysByMonth(System.Int32,System.Int32)">
            <summary>
            传回公历y年m月的总天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.GetMondayDateByDate(System.DateTime)">
            <summary>
            根据日期值获得周一的日期
            </summary>
            <param name="dt">输入日期</param>
            <returns>周一的日期</returns>
        </member>
        <member name="M:FOX.COMMON.ChinaDate.getChinaDate(System.DateTime)">
            <summary>
            获取农历
            </summary>
        </member>
        <member name="T:FOX.COMMON.ChineseCalendar">
            <summary>
            中国日历
            </summary>
        </member>
        <member name="F:FOX.COMMON.ChineseCalendar.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据
             第17位：表示闰月天数，0表示29天   1表示30天
             第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
             第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
            </remarks>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.#ctor(System.DateTime)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="LeapFlag">闰月标志</param>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            //传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary> 
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.CheckDateLimit(System.DateTime)">
            <summary>
            检查公历日期是否符合要求
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
        </member>
        <member name="M:FOX.COMMON.ChineseCalendar.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.newCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:FOX.COMMON.ChineseCalendar.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="T:FOX.COMMON.ChineseCalendar.SolarHolidayStruct">
            <summary>
            阳历
            </summary>
        </member>
        <member name="T:FOX.COMMON.ChineseCalendar.LunarHolidayStruct">
            <summary>
            农历
            </summary>
        </member>
        <member name="M:FOX.COMMON.BasePage.ExportData(System.Web.UI.WebControls.GridView)">
            <summary>
            导出Excel
            </summary>
            <param name="obj"></param>
        </member>
        <member name="T:FOX.COMMON.RsetCommand">
            <summary>
            This command represents the Pop3 RSET command.
            </summary>
        </member>
        <member name="M:FOX.COMMON.RsetCommand.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.RsetCommand"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:FOX.COMMON.RsetCommand.CreateRequestMessage">
            <summary>
            Creates the RSET request message.
            </summary>
            <returns>
            The byte[] containing the RSET request message.
            </returns>
        </member>
        <member name="T:FOX.COMMON.RetrResponse">
            <summary>
            This class represents a RETR response message resulting
            from a Pop3 RETR command execution against a Pop3 Server.
            </summary>
        </member>
        <member name="M:FOX.COMMON.RetrResponse.#ctor(FOX.COMMON.Pop3Response,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.RetrResponse"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="messageLines">The message lines.</param>
        </member>
        <member name="P:FOX.COMMON.RetrResponse.MessageLines">
            <summary>
            Gets the message lines.
            </summary>
            <value>The Pop3 message lines.</value>
        </member>
        <member name="M:FOX.COMMON.ImageClass.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:FOX.COMMON.ImageClass.ImageWatermark(System.String,System.String,System.String)">
            <summary>
            图片水印处理方法
            </summary>
            <param name="path">需要加载水印的图片路径（绝对路径）</param>
            <param name="waterpath">水印图片（绝对路径）</param>
            <param name="location">水印位置（传送正确的代码）</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            图片水印位置处理方法
            </summary>
            <param name="location">水印位置</param>
            <param name="img">需要添加水印的图片</param>
            <param name="waterimg">水印图片</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.LetterWatermark(System.String,System.Int32,System.String,System.Drawing.Color,System.String)">
            <summary>
            文字水印处理方法
            </summary>
            <param name="path">图片路径（绝对路径）</param>
            <param name="size">字体大小</param>
            <param name="letter">水印文字</param>
            <param name="color">颜色</param>
            <param name="location">水印位置</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.GetLocation(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            文字水印位置的方法
            </summary>
            <param name="location">位置代码</param>
            <param name="img">图片对象</param>
            <param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
            <param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="Width">原始图片的长度</param>
            <param name="Height">原始图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.Compress(System.String,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="mybt">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:FOX.COMMON.ImageClass.GetFrames(System.String,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="pPath">图片路径</param>
            <param name="pSavePath">保存路径</param>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.GetStrPartly(System.String,System.Int32)">
            <summary>
            截取内容长度
            </summary>
            <param name="o_Str">原字符串</param>
            <param name="len">截取长度</param>
            <returns>截取后字符串</returns>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.GetCellText(System.Web.UI.WebControls.TableCell)">
            <summary>
            获取单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <returns>内容</returns>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.SetCellText(System.Web.UI.WebControls.TableCell,System.Int32)">
            <summary>
            设置单元格内容
            </summary>
            <param name="cell">TableCell</param>
            <param name="maxLen">最大长度</param>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.GridView2DataTable(System.Web.UI.WebControls.GridView)">
            <summary>
            从GridView的数据生成DataTable
            </summary>
            <param name="gv">GridView对象</param>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.ToDataTable(System.Collections.IList)">
            <summary>
            将集合类转换成DataTable
            </summary>
            <param name="list">集合</param>
        </member>
        <member name="M:FOX.COMMON.GridViewHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="T:FOX.COMMON.UrlOper">
            <summary>
            URL的操作类
            </summary>
        </member>
        <member name="M:FOX.COMMON.UrlOper.IsBase64(System.String)">
            <summary>
            是否是Base64字符串
            </summary>
            <param name="eStr"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.UrlOper.AddParam(System.String,System.String,System.String)">
            <summary>
            添加URL参数
            </summary>
        </member>
        <member name="M:FOX.COMMON.UrlOper.UpdateParam(System.String,System.String,System.String)">
            <summary>
            更新URL参数
            </summary>
        </member>
        <member name="M:FOX.COMMON.UrlOper.ParseUrl(System.String,System.String@,System.Collections.Specialized.NameValueCollection@)">
            <summary>
            分析 url 字符串中的参数信息
            </summary>
            <param name="url">输入的 URL</param>
            <param name="baseUrl">输出 URL 的基础部分</param>
            <param name="nvc">输出分析后得到的 (参数名,参数值) 的集合</param>
        </member>
        <!-- 忽略成員 "T:FOX.COMMON.StringHelper" 中格式錯誤的 XML 註解 -->
        <member name="M:FOX.COMMON.StringHelper.GetStrArray(System.String,System.Char,System.Boolean)">
            <summary>
            把字符串按照分隔符转换成 List
            </summary>
            <param name="str">源字符串</param>
            <param name="speater">分隔符</param>
            <param name="toLower">是否转换为小写</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetStrArray(System.String)">
            <summary>
            把字符串转 按照, 分割 换为数据
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <!-- 忽略成員 "M:FOX.COMMON.StringHelper.GetArrayStr(System.Collections.Generic.List{System.String},System.String)" 中格式錯誤的 XML 註解 -->
        <member name="M:FOX.COMMON.StringHelper.GetArrayStr(System.Collections.Generic.List{System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetArrayValueStr(System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
            <summary>
            得到数组列表以逗号分隔的字符串
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.DelLastComma(System.String)">
            <summary>
            删除最后结尾的一个逗号
            </summary>
        </member>
        <member name="M:FOX.COMMON.StringHelper.DelLastChar(System.String,System.String)">
            <summary>
            删除最后结尾的指定字符后的字符
            </summary>
        </member>
        <member name="M:FOX.COMMON.StringHelper.ToSBC(System.String)">
            <summary>
            转全角的函数(SBC case)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.ToDBC(System.String)">
            <summary>
             转半角的函数(SBC case)
            </summary>
            <param name="input">输入</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetSubStringList(System.String,System.Char)">
            <summary>
            把字符串按照指定分隔符装成 List 去除重复
            </summary>
            <param name="o_str"></param>
            <param name="sepeater"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetCleanStyle(System.String,System.String)">
            <summary>
             将字符串样式转换为纯字符串
            </summary>
            <param name="StrList"></param>
            <param name="SplitString"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetNewStyle(System.String,System.String,System.String,System.String@)">
            <summary>
            将字符串转换为新样式
            </summary>
            <param name="StrList"></param>
            <param name="NewStyle"></param>
            <param name="SplitString"></param>
            <param name="Error"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.SplitMulti(System.String,System.String)">
            <summary>
            分割字符串
            </summary>
            <param name="str"></param>
            <param name="splitstr"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.StrToId(System.String)">
            <summary>
            获取正确的Id，如果不是正整数，返回0
            </summary>
            <param name="_value"></param>
            <returns>返回正确的整数ID，失败返回0</returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。(0除外)
            </summary>
            <param name="_value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="_express">正则表达式的内容。</param>
            <param name="_value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.GetMD5(System.String)">
            <summary>
            根据配置对指定字符串进行 MD5 加密
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.StrLength(System.String)">
            <summary>
            得到字符串长度，一个汉字长度为2
            </summary>
            <param name="inputString">参数字符串</param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.ClipString(System.String,System.Int32)">
            <summary>
            截取指定长度字符串
            </summary>
            <param name="inputString">要处理的字符串</param>
            <param name="len">指定长度</param>
            <returns>返回处理后的字符串</returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.HtmlToTxt(System.String)">
            <summary>
            HTML转行成TEXT
            </summary>
            <param name="strHtml"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.StringHelper.IsNullOrEmpty``1(``0)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <typeparam name="T">要验证的对象的类型</typeparam>
            <param name="data">要验证的对象</param>        
        </member>
        <member name="M:FOX.COMMON.StringHelper.IsNullOrEmpty(System.Object)">
            <summary>
            判断对象是否为空，为空返回true
            </summary>
            <param name="data">要验证的对象</param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.LockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">不需锁定的控件</param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.UnLockPage(System.Web.UI.Page,System.Object[])">
            <summary>
            解除锁定页面上的一些组件
            </summary>
            <param name="page"></param>
            <param name="obj">继续保持锁定的控件</param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.LockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            禁用控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.UnLockControl(System.Web.UI.Page,System.Web.UI.Control)">
            <summary>
            开放控件
            </summary>
            <param name="page"></param>
            <param name="ctl"></param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.IsContains(System.Object[],System.Web.UI.Control)">
            <summary>
            数组中是否包含当前控件
            </summary>
            <param name="obj"></param>
            <param name="ctl"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageHelper.GetCurrentPage">
            <summary>
            得到当前页对象实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageHelper.GetPageName">
            <summary>
            从System.Web.HttpRequest的Url中获取所调用的页面名称
            </summary>
            <returns>页面名称</returns>
        </member>
        <member name="M:FOX.COMMON.PageHelper.GetQueryString(System.String)">
            <summary>
            读取QueryString值
            </summary>
            <param name="queryStringName">QueryString名称</param>
            <returns>QueryString值</returns>
        </member>
        <member name="M:FOX.COMMON.PageHelper.Redirect(System.String)">
            <summary>
            页面跳转
            </summary>
            <param name="url">URL地址</param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.GetRelativeLevel">
            <summary>
            获取当前请求页面相对于根目录的层级
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.PageHelper.WriteScript(System.String)">
            <summary>
            写javascript脚本
            </summary>
            <param name="script">脚本内容</param>
        </member>
        <member name="M:FOX.COMMON.PageHelper.GetClientBrowserVersion">
            <summary>
            返回客户端浏览器版本
            如果是IE类型，返回版本数字
            如果不是IE类型，返回-1
            </summary>
            <returns>一位数字版本号</returns>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.GetFileName(System.String)">
            <summary>
            鳳恅璃腔靡趼
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.GetExtension(System.String)">
            <summary>
            鳳恅璃孺桯靡
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.CheckExtension(System.String)">
            <summary>
            鳳恅璃濬倰
            </summary>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ConvertFlv(System.String,System.String)">
            <summary>
            弝跡宒蛌峈Flv
            </summary>
            <param name="vFileName">埻弝恅璃華硊</param>
            <param name="ExportName">汜傖綴腔Flv恅璃華硊</param>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.CatchImg(System.String)">
            <summary>
            汜傖Flv弝腔坫謹芞
            </summary>
            <param name="vFileName">弝恅璃華硊</param>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            蛌遙恅璃甜悵湔婓硌隅恅璃標狟
            </summary>
            <param name="fileName">奻換弝恅璃腔繚噤ㄗ埻恅璃ㄘ</param>
            <param name="playFile">蛌遙綴腔恅璃腔繚噤ㄗ厙釐畦溫恅璃ㄘ</param>
            <param name="imgFile">植弝恅璃笢蚰腔芞繚噤</param>
            <returns>傖髡:殿隙芞剞攜華硊;囮啖:殿隙諾趼睫揹</returns>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.ChangeFileVir(System.String,System.String,System.String)">
            <summary>
            蛌遙恅璃甜悵湔婓硌隅恅璃標狟
            </summary>
            <param name="fileName">奻換弝恅璃腔繚噤ㄗ埻恅璃ㄘ</param>
            <param name="playFile">蛌遙綴腔恅璃腔繚噤ㄗ厙釐畦溫恅璃ㄘ</param>
            <param name="imgFile">植弝恅璃笢蚰腔芞繚噤</param>
            <returns>傖髡:殿隙芞剞攜華硊;囮啖:殿隙諾趼睫揹</returns>
        </member>
        <member name="M:DotNet.Utilities.VideoConvert.MChangeFilePhy(System.String,System.String,System.String)">
            <summary>
            堍俴mencoder腔弝賤鎢蛌遙
            </summary>
        </member>
        <member name="T:FOX.COMMON.DownLoadHelper">
            <summary>
            文件下载帮助类
            </summary>
        </member>
        <member name="M:FOX.COMMON.DownLoadHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
             输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
        </member>
        <member name="T:FOX.COMMON.TimeHelper">
            <summary>
            时间类
            1、SecondToMinute(int Second) 把秒转换成分钟
            </summary>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.GetFormatDate(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 年月日 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt">年月日分隔符</param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.GetFormatTime(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 时分秒 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt"></param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.DateDiff2(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:FOX.COMMON.TimeHelper.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="M:FOX.COMMON.Serialize.BinarySerialize(System.String,System.Object)">
            <summary>
            序列化为对象
            </summary>
            <param name="objname"></param>
            <param name="obj"></param>
        </member>
        <member name="M:FOX.COMMON.Serialize.BinaryDeserialize(System.String)">
            <summary>
            从二进制文件中反序列化
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Serialize.SoapSerialize(System.String,System.Object)">
            <summary>
            序列化为soap 即xml
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:FOX.COMMON.Serialize.SoapDeserialize(System.String)">
            <summary>
            反序列对象
            </summary>
            <param name="objname"></param>
        </member>
        <member name="M:FOX.COMMON.Serialize.XmlDeserailize(System.String)">
            <summary>
            从xml序列中反序列化
            </summary>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="T:FOX.COMMON.RandomHelper">
            <summary>
            使用Random类生成伪随机数
            </summary>
        </member>
        <member name="M:FOX.COMMON.RandomHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:FOX.COMMON.RandomHelper.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            生成一个指定范围的随机整数，该随机数范围包括最小值，但不包括最大值
            </summary>
            <param name="minNum">最小值</param>
            <param name="maxNum">最大值</param>
        </member>
        <member name="M:FOX.COMMON.RandomHelper.GetRandomDouble">
            <summary>
            生成一个0.0到1.0的随机小数
            </summary>
        </member>
        <member name="M:FOX.COMMON.RandomHelper.GetRandomArray``1(``0[])">
            <summary>
            对一个数组进行随机排序
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="arr">需要随机排序的数组</param>
        </member>
        <member name="T:FOX.COMMON.Pop3Exception">
            <summary>
            This class represents a Pop3 Exception.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Exception.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Exception"/> class.
            </summary>
        </member>
        <member name="M:FOX.COMMON.Pop3Exception.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Exception"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Exception.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Exception"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:FOX.COMMON.Pop3Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:FOX.COMMON.Pop3Exception"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="M:FOX.COMMON.FTPClient.#ctor">
            <summary>
            缺省构造函数
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.strMsg">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.strReply">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.iReplyCode">
            <summary>
            服务器返回的应答码
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.socketControl">
            <summary>
            进行控制连接的socket
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.trType">
            <summary>
            传输模式
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.BLOCK_SIZE">
            <summary>
            接收和发送数据的缓冲区
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.ASCII">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="F:FOX.COMMON.FTPClient.buffer">
            <summary>
            字节数组
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Connect">
            <summary>
            建立连接 
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.DisConnect">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.SetTransferType(FOX.COMMON.FTPClient.TransferType)">
            <summary>
            设置传输模式
            </summary>
            <param name="ttType">传输模式</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.GetTransferType">
            <summary>
            获得传输模式
            </summary>
            <returns>传输模式</returns>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Dir(System.String)">
            <summary>
            获得文件列表
            </summary>
            <param name="strMask">文件名的匹配字符串</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.GetFileSize(System.String)">
            <summary>
            获取文件大小
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:FOX.COMMON.FTPClient.GetFileInfo(System.String)">
            <summary>
            获取文件信息
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="strFileName">待删除文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Rename(System.String,System.String)">
            <summary>
            重命名(如果新文件名与已有文件重名,将覆盖已有文件)
            </summary>
            <param name="strOldFileName">旧文件名</param>
            <param name="strNewFileName">新文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Get(System.String,System.String)">
            <summary>
            下载一批文件
            </summary>
            <param name="strFileNameMask">文件名的匹配字符串</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Get(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.GetNoBinary(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Put(System.String,System.String)">
            <summary>
            上传一批文件
            </summary>
            <param name="strFolder">本地目录(不得以\结束)</param>
            <param name="strFileNameMask">文件名匹配字符(可以包含*和?)</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.Put(System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.PutByGuid(System.String,System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.MkDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.RmDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.ChDir(System.String)">
            <summary>
            改变目录
            </summary>
            <param name="strDirName">新的工作目录名</param>
        </member>
        <member name="M:FOX.COMMON.FTPClient.ReadReply">
            <summary>
            将一行应答字符串记录在strReply和strMsg,应答码记录在iReplyCode
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.CreateDataSocket">
            <summary>
            建立进行数据连接的socket
            </summary>
            <returns>数据连接socket</returns>
        </member>
        <member name="M:FOX.COMMON.FTPClient.CloseSocketConnect">
            <summary>
            关闭socket连接(用于登录以前)
            </summary>
        </member>
        <member name="M:FOX.COMMON.FTPClient.ReadLine">
            <summary>
            读取Socket返回的所有字符串
            </summary>
            <returns>包含应答码的字符串行</returns>
        </member>
        <member name="M:FOX.COMMON.FTPClient.SendCommand(System.String)">
            <summary>
            发送命令并获取应答码和最后一行应答字符串
            </summary>
            <param name="strCommand">命令</param>
        </member>
        <member name="P:FOX.COMMON.FTPClient.RemoteHost">
            <summary>
            FTP服务器IP地址
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPClient.RemotePort">
            <summary>
            FTP服务器端口
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPClient.RemotePath">
            <summary>
            当前服务器目录
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPClient.RemoteUser">
            <summary>
            登录用户账号
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPClient.RemotePass">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="P:FOX.COMMON.FTPClient.Connected">
            <summary>
            是否登录
            </summary>
        </member>
        <member name="T:FOX.COMMON.FTPClient.TransferType">
            <summary>
            传输模式:二进制类型、ASCII类型
            </summary>
        </member>
        <member name="T:FOX.COMMON.BindDataControl">
            <summary>
            数据展示控件 绑定数据类
            </summary>
        </member>
        <member name="M:FOX.COMMON.BindDataControl.BindDataList(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:FOX.COMMON.BindDataControl.BindDataReaderList(System.Web.UI.Control,System.Data.SqlClient.SqlDataReader)">
            <summary>
            SqlDataReader简单绑定DataList
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:FOX.COMMON.BindDataControl.BindGridView(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            简单绑定GridView
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
        <member name="M:FOX.COMMON.BindDataControl.BindRepeater(System.Web.UI.Control,System.Data.DataView)">
            <summary>
            绑定服务器控件 简单绑定Repeater
            </summary>
            <param name="ctrl">控件ID</param>
            <param name="mydv">数据视图</param>
        </member>
    </members>
</doc>
